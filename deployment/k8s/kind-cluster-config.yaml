# kind-cluster-config.yaml
# #+NAME: kind kubeadm DynamicAuditing configuration

kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
kubeadmConfigPatches:
- |
  apiVersion: kubeadm.k8s.io/v1beta2
  kind: ClusterConfiguration
  metadata:
    name: config
  apiServer:
    extraArgs:
      "feature-gates": "DynamicAuditing=true"
      "runtime-config": "auditregistration.k8s.io/v1alpha1=true"
      "audit-dynamic-configuration": "true"
nodes:
 - role: control-plane
   extraMounts:
   - containerPath: /var/local-path-provisioner
     hostPath: /tmp/workspace/pvcs
     readOnly: False
   - containerPath: /var/run/docker.sock
     hostPath: /var/run/docker.sock
     readOnly: False
   - containerPath: /var/run/ssh-agent.sock
     hostPath: /tmp/workspace/ssh-agent.sock
     readOnly: False
   - containerPath: /workspace
     hostPath: /tmp/workspace
     readOnly: False
   extraPortMappings:
   - containerPort: 80
     hostPort: 80
   - containerPort: 443
     hostPort: 443
   - containerPort: 5432
     hostPort: 5432
   # - containerPort: 80
   #   hostPort: 2080
   # - containerPort: 443
   #   hostPort: 20443
   kubeadmConfigPatches:
   - |
     apiVersion: kubeadm.k8s.io/v1beta2
     kind: InitConfiguration
     nodeRegistration:
       kubeletExtraArgs:
         node-labels: "ingress-ready=true"
         authorization-mode: "AlwaysAllow"
 - role: worker
   extraMounts:
   - containerPath: /var/local-path-provisioner
     hostPath: /tmp/workspace/pvcs
     readOnly: False
   - containerPath: /var/run/docker.sock
     hostPath: /var/run/docker.sock
     readOnly: False
   - containerPath: /var/run/ssh-agent.sock
     hostPath: /tmp/workspace/ssh-agent.sock
     readOnly: False
   - containerPath: /workspace
     hostPath: /tmp/workspace
     readOnly: False
