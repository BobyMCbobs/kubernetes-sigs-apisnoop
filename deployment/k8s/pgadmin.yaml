apiVersion: v1
kind: List
metadata: {}
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: pgadmin-configmap
  data:
    servers.json: |
      { "Servers": { "1": {
        "Name": "apisnoop",
        "Group": "Servers",
        "Host": "postgres",
        "Port": 5432,
        "MaintenanceDB": "apisnoop",
        "Username": "apisnoop",
        "SSLMode": "prefer",
        "Comment": "APISnoop Database",
        "Password": "s3cretsauc3",
        "PassFile": "/pgadmin-config/pgpass",
        "SSLCompression": 0,
        "Timeout": 10,
        "UseSSHTunnel": 0,
        "TunnelPort": "22",
        "TunnelAuthentication": 0
       }}}
    pgpass: |
      postgres:5432:apisnoop:apisnoop:s3cretsauc3
      10.96.112.46:5432:apisnoop:apisnoop:s3cretsauc3
- apiVersion: v1
  kind: Service
  metadata:
    name: pgadmin
  spec:
    selector:
      io.apisnoop.dba: pgadmin
    ports:
    - name: "http"
      port: 80
      targetPort: 80
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: pgadmin
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.apisnoop.dba: pgadmin
    template:
      metadata:
        labels:
          io.apisnoop.dba: pgadmin
      spec:
        securityContext:
          runAsUser: 5050
          fsGroup: 5050
        restartPolicy: Always
        initContainers:
        - name: cp-servers-json
          image: alpine:3.6
          command:
            - cp
            - /pgadmin-configmap/servers.json
            - /pgadmin-config/servers.json
          volumeMounts:
            - name: pgadmin-configmap
              mountPath: /pgadmin-configmap/
            - name: pgadmin-config
              mountPath: /pgadmin-config
        - name: chmod-servers-json
          image: alpine:3.6
          command:
            - chmod
            - "0400"
            - /pgadmin-config/servers.json
          volumeMounts:
            - name: pgadmin-config
              mountPath: /pgadmin-config
        - name: cp-pgpass
          image: alpine:3.6
          # securityContext:
          #   runAsUser: 0
          command:
            - cp
            - /pgadmin-configmap/pgpass
            - /pgadmin-config/pgpass
          volumeMounts:
            - name: pgadmin-configmap
              mountPath: /pgadmin-configmap/
            - name: pgadmin-config
              mountPath: /pgadmin-config
        - name: chmod-pgpass
          image: alpine:3.6
          command:
            - chmod
            - "0400"
            - /pgadmin-config/pgpass
          volumeMounts:
            - name: pgadmin-config
              mountPath: /pgadmin-config
        containers:
        - name: pgadmin
          image: "dpage/pgadmin4:4.17"
          ports:
          - containerPort: 80
          volumeMounts:
            - name: pgadmin-config
              mountPath: /pgadmin-config/
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: "apisnoop"
            - name: PGADMIN_DEFAULT_PASSWORD
              value: "apisnoop"
            - name: PGADMIN_SERVER_JSON_FILE
              value: "/pgadmin-config/servers.json"
            - name: PGADMIN_CONFIG_SERVER_MODE
              value: "False"
            - name: PGADMIN_CONFIG_APP_NAME
              value: "\"APISnoopQL\""
            - name: PGADMIN_CONFIG_APP_COPYRIGHT
              value: "\"Copyright 2019 The Cloud Native Compute Foundation\""
            - name: PGADMIN_CONFIG_LOGIN_BANNER
              value: "\"Welcome to APISnoopQL\""
            - name: PGADMIN_CONFIG_ALLOW_SAVE_PASSWORD
              value: "True"
            - name: PGADMIN_CONFIG_MAX_QUERY_HIST_STORED
              value: "1234"
            - name: PGADMIN_CONFIG_SESSION_COOKIE_NAME
              value: "\"apisnoopql_session\""
            - name: PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED
              value: "False"
            - name: PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED
              value: "False"
            - name: PGADMIN_CONFIG_SESSION_EXPIRATION_TIME
              value: "7"
            - name: PGADMIN_CONFIG_CONSOLE_LOG_LEVEL
              value: "10"
            # - name: SCRIPT_NAME
            #   value: "/pgadmin"
        volumes:
          - name: pgadmin-configmap
            configMap:
              name: pgadmin-configmap
              items:
                - key: servers.json
                  path: servers.json
                  mode: 256
                - key: pgpass
                  path: pgpass
                  mode: 256
          - name: pgadmin-config
            emptyDir:
              medium: "Memory"
          # https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html#http-via-nginx
