#+TITLE: Updating APISnoop upon a new release

APISnoop is intended to have test coverage for the latest working release of
Kubernetes, plus earlier releases going back to 1.15. The /working release/ is
the one after the official /current stable/ release. So if the /current stable/
release is ~1.19.0~, then the /working release/ is ~1.20.0~.

Snoopdb determines its /working release/ by looking at
[[https://github.com/cncf/apisnoop/blob/master/resources/coverage/releases.yaml][cncf/apisnoop/resources/coverage/releases.yaml]] and grabbing the top version from
this list.

When Kubernetes releases a new /current stable/ version, this yaml file needs to
be updated so that our db knows what the new working release should be.
Currently, this is done manually.

* Updating the releases.yaml

When there is a new release you do two things:
- set the release date of the new /current stable/ release
- add the next version with an empty string.

** Example
Let's say that on 8 April, 2021, K8s 1.21.0 is released.
To update APISnoop we go to [[https://github.com/cncf/apisnoop/blob/master/resources/coverage/releases.yaml][cncf/apisnoop/resources/coverage/releases.yaml]]
and change it's top sections from:
#+begin_example yaml
---
- version: 1.21.0
  release_date: ""
...
#+end_example

to

#+begin_example yaml
---
- version: 1.22.0
  release_date: ""
- version: 1.21.0
  release_date: 2021-04-08
...
#+end_example

* Updating APISnoop the site
After you change this file, snoopdb will automatically update itself to grab the
next release, and the site will update accordingly as well.  There should be no more manual work involved.
You likely will want to tag this commit though to specify a new release being made official.
