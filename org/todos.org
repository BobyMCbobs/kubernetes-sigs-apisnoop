#+TITLE: Todos

* Inbox
** Remove Hasura  from apps
** Remove Postgres from apps
** Remove webapp from apps
** Switch auditlogger to new one, with helm chart
** Add charts as top level folder
** Remove pgadmin from apps
** see if we need certs anymore in apps
** see if we need nginx-ingress anymore in apps
* snoopDB
** DONE Refactor file-naming in initdb for consistent numbering
** TODO Add snoopdb and auditlogger to packet cluster, test they work
we are expecting null values for the endpoints, but auditlogger should still be able to do insertions
** DONE Add Trigger to add endpoint on new insertion to testing.audit_event
** TODO Add testing views to new snoopdb
** TODO ensure generate-json.sql works with foldcer restructuring of resoources
** DONE Add build log announcements for each migration
   Could it be something like 'CREATE EXTENSIONS'  "EXTENSIONS CREATED" and "Create open api table" and "open api table defined and commented"
   it'd help to see where we are at in the build.  I think we could do it with cheeky select statements
** TODO figure out what to do with loading all past audit events in our weird code freeze time
   currently the latest release in our test runs is 1.20.0
   however, we are in the week of code freeze in the transition from 1.19 to 1.20 and during this time, 1.19.0 hasn't been officially released and there is no tag for it in github.
   this means we are going to be missing this release when loading up past tags.
   I am not sure the best way to handle this, or what to do in 3 months for 1.21...I don't wanna have to be updating the past releases script every time...let's find an elegant way of grabbing all past releases.

** DONE move docs and org folder to top-level
** DONE add resources to top-level
** TODO update testing.audit_event definition to be about auditlogger
it's just the same as audit_event right now.

* snoopApp
** TODO move snoopApp repo to apisnoop and retain history
** TODO update RESORUCES constant to new apisnoop repo
** TODO investigate how to host snoopApp, will vercel work if it's within a folder of a monorepo?
* auditlogger
* test writing
** TODO create repo in apisnoop/org for test-writing
** TODO move over our tickets folder with its git history to this new repo
** TODO Confirm test writing works with new snoopdb and auditlogger
