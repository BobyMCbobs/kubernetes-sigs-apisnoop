             ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              FILLING THE GAPS IN KUBERNETES TEST COVERAGE

                             Hippie Hacker
             ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


Are the Kubernetes behaviors your applications actually require well
tested and guaranteed to be available on all cloud providers?

In this session, you will learn how to ensure your Kubernetes API
surface area usage is exercised by tests all Kubernetes Certified
Service Providers must pass.

We will cover:
• the e2e test suite
• automation that runs the suite before code is merged into Kubernetes.
• the API surface area covered by these tests
• the API surface area required by several popular applications.
• Identifying the untested API surface area your applications require
• Contributing tests that increase API surface coverage
• Promoting tests to Conformance


You are here
════════════

  I’m so glad you are here! We are all here, together.


Why are we here?
════════════════

  I’m Hippie Hacker, and together and I’d like all of us win, not just
  some of us.


Production Workloads Worldwide
══════════════════════════════

  • Ensuring “Generally Available” is just that
  • Conformance Testing required
  We want our workloads to run globally


Building Sustainable Ecosystems
═══════════════════════════════

  • vendor-neutral home for us all
  But we’ll need sustainable ecosystems of inovations across the globe
  to do so


Fostering Communites
════════════════════

  • All Nations / All Neighborhoods
  • Our Customs / Our Protocols
  • Our Land / Our Clouds
  This means all communities in all nations.


.
═

  We have a standard defined by tests that must pass on every Certified
  Cloud Provider


APISNOOP.CNCF.IO
════════════════

  APISnoop is tooling to allow us to understand exactly what it is we
  are testing. Understanding the coverage directly.


1960
════

  The first public pictures of clouds
  First TV Broadcast from Space
  TIROS-1


1972
════

  The best known selfie
  Blue Marble
  Apollo 17


1990
════

  30 degrees above the ecliptic

  Pale Blue Dot
  Voyager 1


2001
════

  We start getting more sattelites


Many Satellites
───────────────

  And more


Combined Images
───────────────

  And many more


2002
════

  We start getting a clear picture of cloud coverage


- Clouds
────────

  And what the clouds are there for


- Ice
─────

  which eventually leads us to


+ People
────────

  The people


1.10
════

  Thanks Ken!
  First software written parsing e2e.log files
  Ken Omichi


1.11
════

  Thanks Rohan!
  First parsing of audit.logs Static Website
  Rohan Fletcher


1.12
════

  Thanks Zhonghu!
  First glimpse of actual test coverage
  User-Agent support added to:
  • apiserver/auditlogs
  • e2e.framework
  Zhonghu Xu


1.13
════

  Thanks Zhonghu!
  First glimpse of change of coverage over time
  apisnoop.cncf.ci setup to process CI audit-logs
  Devan Carpenter


1.14
════

  Thanks Zach! This allowed us to start asking questions about our
  coverage
  Dynamic queries to comprehend the full API surface/coverage area
  JSON -> SQL
  Zach Mandeville


1.15
════

  Thanks Aaron! Now we had a ’you have to be this high to ride’
  Policy requiring Conformance Test for GA features
  Posting apisnoop links to PRs
  Spiffxp. Thanks for making us be honest about testing.


1.16
════

  Thanks Jordan! Ensuring we see every event generated by any
  application.
  Defining new metrics of API surface area and coverage
  Jordan Liggitt


1.17
════

  This is where you come in! What parts of Kubernetes do your
  applications depend on?
  We need to test the infrastructure we all depend on.
  This is where you com in!


K8s Conformance / APISnoop
══════════════════════════

  This is where to find us.
  • <https://github.com/cncf/k8s-conformance>
  • <https://apisnoop.cncf.io>
  • <https://github.com/cncf/apisnoop>
  Slack #k8s-conformance


2004
════


License Information
═══════════════════

  Except where otherwise noted, this work, “Filling the Gaps in
  Kubernetes Test Coverage”, is © 2017, 2018, 2019 by Hippie Hacker,
  published under the Creative Commons license

        [No warranties are given. The license may not give you all
        of the permissions necessary for your intended use.]

  In particular, trademark rights are /not/ licensed under this license.
  Thus, rights concerning third party logos (e.g., on the title slide)
  and other (trade-) marks (e.g., “Creative Commons” itself) remain with
  their respective holders.


[No warranties are given. The license may not give you all of the
permissions necessary for your intended use.]
<https://creativecommons.org/licenses/by-sa/4.0/#deed-understanding>
