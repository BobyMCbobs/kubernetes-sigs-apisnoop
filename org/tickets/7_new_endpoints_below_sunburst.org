#+TITLE: 07: New Endpoints showing beneath sunburst
#+AUTHOR: Zach Mandeville

* The Ticket
  Each release will introduce a set of new endpoints. When we see an increase in endpoints, it would be good to know where it increased.

The cleanest place to put it currently is beneath the sunburst. This list should show:

    the name of the endpoint
    whether it is tested
    whether it is conformance tested

Each endpoint should be a link that, when clicked, brings you to that zoom depth on the sunburst (e.g. /1.19.0/stable/core/readFooV1Event)
* The Strategy
  All our information is comiong from a set of json files.  I think the simplest implementation of this, and the easiest to maintain, would be to load two json files upon clicking a release: the release, and the version that came before.  Setup a store for the previous release, and then a derived store that compares current and previous release.  This derived store would just be a filtered set of endpoints as a basic except: ones that are in current that are not in previous.  We can then display these beneath the sunburst.
  
  I prefer doing this work in the snoopApp, rather than building a new json file to consume.  Partially this is because it would muddy up the filespace in our resources and another thing we must remember to update and commit, but mostly bedcause it feels redundant as the information is already in the jsons we have now, with iminaml logic needed to pull it out.

* Process
** Ensure app's list of release is sorted by semver
 We currently have a store called '[[file:~/tmp/ii/snoopApp/src/store/index.js::export const latestRelease = readable(][latestRelease]]' that sorts all our releases and then grabs the first one.  I split this logic, so the sorting is done in our [[file:~/tmp/ii/snoopApp/src/store/index.js::export const releases = writable(][releases]] store instead, and latestRelease just grabs the first one from that.  This makes it nice, as previousRelease just grabs the second in the same list.
 
** Create store: previousRelease
** Ensure that when a release is loaded, the previous release is loaded as well
** Build a derived store for new endpoints
** create list component for new endpoints on sunburst
** celebrate
* Conclusion
  
