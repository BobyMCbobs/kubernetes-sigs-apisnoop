#+title: 600 Delete Old Events
#+PROPERTY: header-args:sql-mode+ :product postgres

* introduction
As you use snoopdb a lot, espeically when test writing, it will generate a
buuuunch of events. These, over time, can slow down or kill the docker container
the db is running in.

Setup a way to delete the old events, either through a function or some sort of trigger.

* Process
** Talk to stephen
Ran this ticket by Stephen, as he faces this problem the most.  He said that a function would be helpful, as it's not just about leaving the container running, but even during some ticket writing he can generate way too many events in a limited time.  He wanted to have control over the age of events to delete, e.g. all events older than 2 hours.

** separate events by age
We will make this for testing.audit_event, but that is empty right now...cos i'm not testing.

#+begin_src sql-mode
\d audit_event
#+end_src

#+RESULTS:
#+begin_SRC example
                                  Unlogged table "public.audit_event"
    Column     |            Type             | Collation | Nullable |             Default
---------------+-----------------------------+-----------+----------+----------------------------------
 release       | text                        |           |          |
 release_date  | text                        |           |          |
 audit_id      | text                        |           | not null |
 endpoint      | text                        |           |          |
 useragent     | text                        |           |          |
 test          | text                        |           |          |
 test_hit      | boolean                     |           |          |
 error         | text                        |           |          |
 conf_test_hit | boolean                     |           |          |
 data          | jsonb                       |           | not null |
 source        | text                        |           |          |
 id            | integer                     |           | not null | generated by default as identity
 ingested_at   | timestamp without time zone |           |          | CURRENT_TIMESTAMP
Indexes:
    "audit_event_pkey" PRIMARY KEY, btree (id)

#+end_SRC


We can use interval to do a testing check.
#+begin_src sql-mode
select current_timestamp, ingested_at,
       (ingested_at < current_timestamp) older_than_now,
       (ingested_at < (current_timestamp - interval '2 hours')) older_than_two_hours,
       (ingested_at < (current_timestamp - interval '10 minutes')) older_than_ten_minutes
  from audit_event limit 1;
#+end_src

#+RESULTS:
#+begin_SRC example
       current_timestamp       |        ingested_at         | older_than_now | older_than_two_hours | older_than_ten_minutes
-------------------------------+----------------------------+----------------+----------------------+------------------------
 2023-04-05 03:48:37.218657+00 | 2023-04-05 03:12:09.286733 | t              | f                    | t
(1 row)

#+end_SRC

This will be what we pass in to our function, then.

** Write function for delete events by age
#+begin_src sql-mode
begin;
create or replace function delete_older_test_events(cutoff interval)
  returns text
  language plpgsql
as $$
  declare count integer;

begin

  delete from testing.audit_event
   where ingested_at < current_timestamp - cutoff;

  get diagnostics count = ROW_COUNT;

  return count||' events removed';
end;
$$;

comment on function delete_older_test_events is 'takes INTERVAL. Deletes events in testing.audit_event older than INTERVAL. Returns success message';
commit;
#+end_src

#+RESULTS:
#+begin_SRC example
BEGIN
postgres=*# postgres-*# postgres-*# postgres-*# postgres$*# postgres$*# postgres$*# postgres$*# postgres$*# postgres$*# postgres$*# postgres$*# postgres$*# postgres$*# postgres$*# postgres$*# postgres$*# CREATE FUNCTION
postgres=*# postgres=*#  delete_older_test_events
--------------------------
 0 events removed
(1 row)

postgres=*# ROLLBACK
#+end_SRC
** Add this to our initdb
I added this as 311, just taking the code from above.
** Publish new image with this work
After this merges, I will update our various charts with the new image.
