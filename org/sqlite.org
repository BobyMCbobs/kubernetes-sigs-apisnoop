#+TITLE: SQLite Raiinbows
#+AUTHOR: ii team
#+DATE: 5 September 2019
#+INCLUDE: "config.org"
#+TODO: TODO(t) NEXT(n) IN-PROGRESS(i) BLOCKED(b) | TADA(d)
#+ARCHIVE: archive/sqlite.archive.org::
#+PROPERTY: header-args:sql-mode+ :results silent :product sqlite :session raiinbow

* Purpose

Port PostgreSQL / Hasura setup to SQLite.

* Welcome, ii dev!
  :PROPERTIES:
  :header-args:sql-mode+: :results silent
  :header-args:sql-mode+: :product sqlite
  :header-args:sql-mode+: :session raiinbow
  :header-args:sqlite+: :db (concat (file-name-directory buffer-file-name) "../apps/sqlite/raiinbow.db")
  :header-args:sqlite+: :colnames yes
  :header-args:sqlite+: :results table replace
  :END:

If you're reading this org file, from within spacemacs, and expecting to do your work from within an org-file...then welcome, fellow ii dev (or honorary ii dev)!

To ensure you're set up properly, you want to run down this checklist:
** TADA [0%] Ready to Work!
    :PROPERTIES:
    :RESET_CHECK_BOXES: t
    :LOGGING: nil
    :END:
- [ ] Ensure you are reading this, and working, from within a tmate session on sharing.io.
  how do to do this is outside scope of this org, but ensure you've ssh'ed into sharing.io, and started a tmate session.

- [ ] Start up dev environment with the ii env variables
  : open a new tmate pane (ctrl+b c) or run `, ,` within the block to run the following:

  #+NAME: start docker containers
  #+BEGIN_SRC tmate :noweb eval :session apisnoop:docker
    # These  sequences are to allow you to use this as an iteration loop
    
    
    
    cd ~/ii/apisnoop/apps # docker-compose.yaml is here
    # Retangle / export code from org/documentation usually into ./apps/*
    # the eval: local vars set this emacs instance server-name to apisnoop
    emacsclient -s apisnoop -e "(org-babel-tangle-file \"../org/sqlite.org\")"
    # We have a sharing.io check to ensure everyone get's there own PORTS
    . .loadenv
  #+END_SRC

- [ ] Open to your sqlite db from within this file using sqlite3
  You'll want execute this code block by moving your cursor within and typing =,,=
  
  #+NAME: Connect org to postgres
  #+BEGIN_SRC emacs-lisp :results silent
    (sql-connect "raiinbow" (concat "*SQL: sqlite:raiinbow*"))
  #+END_SRC

- [ ] Test your connection works
  You can run this sql block, and it see a message in your minbuffer like:
  : You are connected to database "apisnoop" as user "apisnoop" on host "localhost" at port "10041".

  #+NAME: Test Connection
  #+BEGIN_SRC sqlite :results code verbatim
    .databases
    -- PRAGMA compile_options; -- FTS5 and JSON1 are default in sqlite3.9
    -- .dbinfo main
    -- .fullschema
    -- .tables
    -- select count(*) from api_swagger;
  #+END_SRC

  #+RESULTS: Test Connection
  #+begin_src sqlite
  main: /zfs/home/hh/ii/apisnoop/org/../apps/sqlite/raiinbow.db
  #+end_src


- [ ] perform migrations (if not using .cli-migrations hasura image)

  #+NAME: start docker containers
  #+BEGIN_SRC tmate :noweb eval :session apisnoop:migrations
    cd ~/ii/apisnoop/apps/hasura
    hasura migrate apply
    hasura migrate status
  #+END_SRC


- [ ] Load cached audit events
  It is highly likely that a teammate has already run through a db setup, and loaded, named, and indexed their audit events. You can use their cached sql for your own db, speeding up the setup time considerably. 

  To do this, you want to:
  #+NAME: start docker containers
  #+BEGIN_SRC tmate :session apisnoop:load_events
    cd ~/ii/apisnoop/apps
    . .loadenv
    sqlite3 raiinbow.sqlite < /tmp/ci-kubernetes-e2e-gci-gce.1165794879855398916.sql
  #+END_SRC
 
  This will load audit events from bucket =ci-kubernetes-e2e-gci-gce= and job =1165794879855398916=
  If you want to use another bucket/job, check out the longer setup checklist later on.

  The process should take around 30 seconds.  It may throw errors about tables or indexes already existing, but otherwise finish successfully.  

- [ ] Test that audit events loaded.
  
  Now that we are connected to our db, we can run sql queries, like checking if the loading of cached audit events work.
  The following query should return a count of =305025=. You may need to run this twice to ensure your reconnected.
  #+NAME: Number of distinct audit events
  #+BEGIN_SRC sql-mode
  select count(distinct audit_id) from audit_event;
  #+END_SRC

  #+RESULTS: Number of distinct audit events
  #+begin_src sql-mode
   count  
  --------
   305025
  (1 row)

  #+end_src
  
  If this didn't work, check out the longer setup below.
  
- [ ] Start up a psql interpreter with the ii env variables
  It's useful to have psql up to run queries directly in the interpreter.
  : open a new tmate pane (ctrl+b c), or navigate to one used to load cached audit event

  #+NAME: start docker containers
  #+BEGIN_SRC tmate :noweb eval :session apisnoop:sqlite3
    cd ~/ii/apisnoop/apps # docker-compose.yaml is here
    . .loadenv
    sqlite3 $SQLITE_DB
    .databases
    .tables
    .dbinfo main
    .fullschema
  #+END_SRC

- [ ] Test your  hasura endpoint is up
  If all is working right, you should be able to visit =$YOURUSERNAME-hasura.sharing.io=
  You will see many views and all should have data.
  
- [ ] If cached sql not available, load audit events.
  We have a long process as [[*901: update_audit_events.up.sql][part 901: update_audit_events.up.sql]].  You can click enter on that link and then execute each code block within this heading in order.  This process will take about a half hour.

- [ ] Get a drink of water and mark this todo as DONE
  You're all set up and ready to go, but hydration is important!  Get a drink of water, stretch, and recharge before you crush it today!  
  Also, =gh gh gh= to go back to the top then =,TTd= to mark this task as DONE!

* Raw Swaggers Table, and Helper Functions
  :PROPERTIES:
  :header-args:sql-mode+: :results silent
  :header-args:sql-mode+: :product sqlite
  :header-args:sql-mode+: :session raiinbow
  :header-args:sqlite+: :db (concat (file-name-directory buffer-file-name) "../apps/sqlite/raiinbow.db")
  :header-args:sqlite+: :colnames yes
  :header-args:sqlite+: :results table silent
  :END:
  These are jsonb indexed loads of swagger.json from github k8s commits or releases.
  Eventually these will also be populated on the fly when running within/against a cluster.
** 100: API Swagger Table
  :PROPERTIES:
  :header-args:sqlite+: :tangle ../apps/sqlite/100_table_api_swagger.up.sql
  :END:
*** Create Table
#+NAME: api_swagger
#+BEGIN_SRC sqlite
CREATE TABLE IF NOT EXISTS api_swagger (
    version text NOT NULL,
    gitref text NOT NULL,
    ingested_at timestamp DEFAULT CURRENT_TIMESTAMP,
    data jsonb NOT NULL
);
#+END_SRC
** 120: Function for load swagger via github
  :PROPERTIES:
  :header-args:python+: :tangle ../apps/sqlite/120_function_load_swagger_via_github.py
  :END:

https://docs.python.org/3/library/sqlite3.html

#+NAME: load_swagger_via_curl.py
#+BEGIN_SRC python :exports code :dir (concat (file-name-directory buffer-file-name) "../apps/sqlite") :results output
  # should probably sanitize branch_or_tag
  import sqlite3
  import requests
  def load_swagger_via_github(cursor, branch_or_tag):
      swagger_url = '/'.join([
          'https://raw.githubusercontent.com/kubernetes/kubernetes',
          branch_or_tag,
          'api/openapi-spec/swagger.json'])
      r = requests.get(swagger_url)
      if r.status_code != 200:
          raise 'hand'
      insert_query = """insert into 'api_swagger'
      (version, gitref, data)
      VALUES (?, ?, json(?))"""
      insert_tuple = ('master', branch_or_tag, r.text)
      cursor.execute(insert_query, insert_tuple)
      con.commit()

  con = sqlite3.connect('raiinbow.db')
  # con.create_function('load_swagger_for_ref',1,load_swagger_via_github)
  # con.text_factory = str
  # conn = sqlite3.connect(":memory:")
  # con.enable_load_extension(False)
  con.isolation_level = None
  c = con.cursor()
  load_swagger_via_github(c,'master')
  con.close()
#+END_SRC

#+RESULTS: load_swagger_via_curl.py


* Explore
  :PROPERTIES:
  :header-args:sql-mode+: :results silent
  :header-args:sql-mode+: :product sqlite
  :header-args:sql-mode+: :session raiinbow
  :header-args:sqlite+: :db (concat (file-name-directory buffer-file-name) "../apps/sqlite/raiinbow.db")
  :header-args:sqlite+: :colnames yes
  :header-args:sqlite+: :results table replace
  :END:

https://www.sqlite.org/json1.html#jeach

#+BEGIN_SRC sql-mode
CREATE TABLE json_tree(
    key ANY,             -- key for current element relative to its parent
    value ANY,           -- value for the current element
    type TEXT,           -- 'object','array','string','integer', etc.
    atom ANY,            -- value for primitive types, null for array & object
    id INTEGER,          -- integer ID for this element
    parent INTEGER,      -- integer ID for the parent of this element
    fullkey TEXT,        -- full path describing the current element
    path TEXT,           -- path to the container of the current row
    json JSON HIDDEN,    -- 1st input parameter: the raw JSON
    root TEXT HIDDEN     -- 2nd input parameter: the PATH at which to start
);
#+END_SRC

** top level keys
*** 5 keys
#+NAME: top level keys
#+BEGIN_SRC sqlite
select j.key, j.type, j.atom, j.id from api_swagger, json_each(api_swagger.data) as j;
-- limit 10;
-- select j.key from api_swagger, json_tree(api_swagger.data) as j;
-- from api_swagger, json_each(api_swagger.data, '$.paths') as paths limit 1;
#+END_SRC

#+RESULTS: top level keys
| key                 | type   | atom |     id |
|---------------------+--------+------+--------|
| definitions         | object |      |      2 |
| info                | object |      |  28384 |
| paths               | object |      |  28390 |
| security            | array  |      | 158969 |
| securityDefinitions | object |      | 158974 |
| swagger             | text   |  2.0 | 158986 |

*** info - title:Kubernetes version:v1.17.0

#+NAME: info
#+BEGIN_SRC sqlite
select j.key, j.type, j.atom, j.id
from api_swagger,
     json_each(api_swagger.data, '$.info') as j
-- select j.key from api_swagger, json_tree(api_swagger.data) as j;
-- from api_swagger, json_each(api_swagger.data, '$.paths') as paths limit 1;
#+END_SRC

#+RESULTS: info
| key     | type | atom       |    id |
|---------+------+------------+-------|
| title   | text | Kubernetes | 28386 |
| version | text | v1.17.0    | 28388 |

*** operations

#+BEGIN_SRC sqlite
  with paths as (select p.key, p.value, 0 as level
     from api_swagger
          , json_each(api_swagger.data, '$.paths') as p)
  select
    json_extract(o.value, '$.operationId') as op_id,
    -- json_extract(o.value, '$.tags') AS cat,
    --instr(json_extract(o.value, '$.tags'),'_') AS h,
    -- substr(json_extract(o.value, '$.tags[0]'), len(category), instr(json_extract(o.value, '$.tags[0]'),'_')) AS tag_ver,
    json_extract(o.value, '$.x-kubernetes-action') as k8s_action,
    substr(json_extract(o.value, '$.tags[0]'), 0, instr(json_extract(o.value, '$.tags[0]'),'_')) AS category,
    json_extract(o.value, '$.x-kubernetes-group-version-kind.version') as k8s_version,
    json_extract(o.value, '$.x-kubernetes-group-version-kind.kind') as k8s_kind,
    json_extract(o.value, '$.x-kubernetes-group-version-kind.group') as k8s_group,
    CASE
    WHEN paths.key like '%alpha%' THEN 'alpha'
    WHEN paths.key like '%beta%' THEN 'beta'
    ELSE 'stable'
    END as level,
    -- no separate boolean class in sqlite
    CASE
    WHEN (lower(json_extract(o.value, '$.description')) like '%deprecated%') THEN 1
    ELSE 0
    END AS deprecated,
    CASE
    WHEN json_extract(o.value, '$.x-kubernetes-action') = 'post' THEN 'post,create'
    WHEN json_extract(o.value, '$.x-kubernetes-action') = 'put' THEN 'put,update'
    WHEN json_extract(o.value, '$.x-kubernetes-action') = 'get' THEN 'get'
    WHEN json_extract(o.value, '$.x-kubernetes-action') = 'list' THEN 'list'
    WHEN json_extract(o.value, '$.x-kubernetes-action') = 'proxy' THEN 'proxy'
    WHEN json_extract(o.value, '$.x-kubernetes-action') = 'deletecollection' THEN 'deletecollection'
    WHEN json_extract(o.value, '$.x-kubernetes-action') = 'watch' THEN 'watch'
    WHEN json_extract(o.value, '$.x-kubernetes-action') = 'patch' THEN 'patch'
    WHEN json_extract(o.value, '$.x-kubernetes-action') = 'connect' THEN 'connect'
    ELSE NULL
    END as event_verb,
    -- json_extract(o.value, '$.parameters') AS parameters,
    -- json_extract(o.value, '$.consumes') AS consumes,
    -- json_extract(o.value, '$.responses') AS responses,
    paths.key as path,
    o.key as http_method
    from paths
         , json_each(paths.value) as o
    where o.key is not 'parameters'
    and lower(json_extract(o.value, '$.description')) not like '%deprecated%'
    limit 20
 --  limit 40
  ;
#+END_SRC
C

#+RESULTS:
| op_id                                     | k8s_action       | category | k8s_version | k8s_kind        | k8s_group | level  | deprecated | event_verb       | path                                             | http_method |
|-------------------------------------------+------------------+----------+-------------+-----------------+-----------+--------+------------+------------------+--------------------------------------------------+-------------|
| getCoreAPIVersions                        |                  |          |             |                 |           | stable |          0 |                  | /api/                                            | get         |
| getCoreV1APIResources                     |                  | core     |             |                 |           | stable |          0 |                  | /api/v1/                                         | get         |
| listCoreV1ComponentStatus                 | list             | core     | v1          | ComponentStatus |           | stable |          0 | list             | /api/v1/componentstatuses                        | get         |
| readCoreV1ComponentStatus                 | get              | core     | v1          | ComponentStatus |           | stable |          0 | get              | /api/v1/componentstatuses/{name}                 | get         |
| listCoreV1ConfigMapForAllNamespaces       | list             | core     | v1          | ConfigMap       |           | stable |          0 | list             | /api/v1/configmaps                               | get         |
| listCoreV1EndpointsForAllNamespaces       | list             | core     | v1          | Endpoints       |           | stable |          0 | list             | /api/v1/endpoints                                | get         |
| listCoreV1EventForAllNamespaces           | list             | core     | v1          | Event           |           | stable |          0 | list             | /api/v1/events                                   | get         |
| listCoreV1LimitRangeForAllNamespaces      | list             | core     | v1          | LimitRange      |           | stable |          0 | list             | /api/v1/limitranges                              | get         |
| listCoreV1Namespace                       | list             | core     | v1          | Namespace       |           | stable |          0 | list             | /api/v1/namespaces                               | get         |
| createCoreV1Namespace                     | post             | core     | v1          | Namespace       |           | stable |          0 | post,create      | /api/v1/namespaces                               | post        |
| createCoreV1NamespacedBinding             | post             | core     | v1          | Binding         |           | stable |          0 | post,create      | /api/v1/namespaces/{namespace}/bindings          | post        |
| deleteCoreV1CollectionNamespacedConfigMap | deletecollection | core     | v1          | ConfigMap       |           | stable |          0 | deletecollection | /api/v1/namespaces/{namespace}/configmaps        | delete      |
| listCoreV1NamespacedConfigMap             | list             | core     | v1          | ConfigMap       |           | stable |          0 | list             | /api/v1/namespaces/{namespace}/configmaps        | get         |
| createCoreV1NamespacedConfigMap           | post             | core     | v1          | ConfigMap       |           | stable |          0 | post,create      | /api/v1/namespaces/{namespace}/configmaps        | post        |
| deleteCoreV1NamespacedConfigMap           | delete           | core     | v1          | ConfigMap       |           | stable |          0 |                  | /api/v1/namespaces/{namespace}/configmaps/{name} | delete      |
| readCoreV1NamespacedConfigMap             | get              | core     | v1          | ConfigMap       |           | stable |          0 | get              | /api/v1/namespaces/{namespace}/configmaps/{name} | get         |
| patchCoreV1NamespacedConfigMap            | patch            | core     | v1          | ConfigMap       |           | stable |          0 | patch            | /api/v1/namespaces/{namespace}/configmaps/{name} | patch       |
| replaceCoreV1NamespacedConfigMap          | put              | core     | v1          | ConfigMap       |           | stable |          0 | put,update       | /api/v1/namespaces/{namespace}/configmaps/{name} | put         |
| deleteCoreV1CollectionNamespacedEndpoints | deletecollection | core     | v1          | Endpoints       |           | stable |          0 | deletecollection | /api/v1/namespaces/{namespace}/endpoints         | delete      |
| listCoreV1NamespacedEndpoints             | list             | core     | v1          | Endpoints       |           | stable |          0 | list             | /api/v1/namespaces/{namespace}/endpoints         | get         |


*** operation parameters

#+BEGIN_SRC sqlite :results raw
  with
  operations as (
    with
      paths as (
        select
          path.key as path,
          path.value as operations
          from api_swagger
               , json_each(api_swagger.data, '$.paths') as path
          -- where path.key is not 'parameters'
          --   and lower(json_extract(o.value, '$.description')) not like '%deprecated%'
      )
    select
      json_extract(op.value, '$.operationId') as id,  
      json_extract(op.value, '$.parameters') as parameters
      from paths
           , json_each(paths.operations) as op
           -- , json_each(paths.value, '$.parameters') as params
  )
  select operations.id as param_op,
         json_extract(param.value, '$.name') as param_name,
         replace(
           CASE
           WHEN (json_extract(param.value, '$.in') = 'body') 
            AND (json_extract(param.value, '$.schema') is not null) 
            THEN json_extract(param.value, '$.schema.$ref') 
           ELSE json_extract(param.value, '$.type') 
           END, '#/definitions/','') AS param_schema,
         CASE
         WHEN (json_extract(param.value, '$.required') = 'true')  THEN 1
         ELSE 0
         END AS required,
         CASE
         WHEN (json_extract(param.value, '$.uniqueItems') = 'true')  THEN 1
         ELSE 0
         END AS unique_items,
         json_extract(param.value, '$.in') as "in",
         json_extract(param.value, '$.type') as type,
         json_extract(param.value, '$.uniqueItems') as u
         -- , json_extract(param.value, '$.description') as d
    from operations
         , json_each(operations.parameters) as param
  limit 100
  ;
#+END_SRC

#+RESULTS:
| param_op                                  | param_name          | param_schema                                       | required | unique_items | in    | type    | u |
|-------------------------------------------+---------------------+----------------------------------------------------+----------+--------------+-------+---------+---|
| listCoreV1Namespace                       | allowWatchBookmarks | boolean                                            |        0 |            0 | query | boolean | 1 |
| listCoreV1Namespace                       | continue            | string                                             |        0 |            0 | query | string  | 1 |
| listCoreV1Namespace                       | fieldSelector       | string                                             |        0 |            0 | query | string  | 1 |
| listCoreV1Namespace                       | labelSelector       | string                                             |        0 |            0 | query | string  | 1 |
| listCoreV1Namespace                       | limit               | integer                                            |        0 |            0 | query | integer | 1 |
| listCoreV1Namespace                       | resourceVersion     | string                                             |        0 |            0 | query | string  | 1 |
| listCoreV1Namespace                       | timeoutSeconds      | integer                                            |        0 |            0 | query | integer | 1 |
| listCoreV1Namespace                       | watch               | boolean                                            |        0 |            0 | query | boolean | 1 |
| createCoreV1Namespace                     | body                | io.k8s.api.core.v1.Namespace                       |        0 |            0 | body  |         |   |
| createCoreV1Namespace                     | dryRun              | string                                             |        0 |            0 | query | string  | 1 |
| createCoreV1Namespace                     | fieldManager        | string                                             |        0 |            0 | query | string  | 1 |
| createCoreV1NamespacedBinding             | body                | io.k8s.api.core.v1.Binding                         |        0 |            0 | body  |         |   |
| deleteCoreV1CollectionNamespacedConfigMap | allowWatchBookmarks | boolean                                            |        0 |            0 | query | boolean | 1 |
| deleteCoreV1CollectionNamespacedConfigMap | body                | io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions |        0 |            0 | body  |         |   |
| deleteCoreV1CollectionNamespacedConfigMap | continue            | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedConfigMap | dryRun              | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedConfigMap | fieldSelector       | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedConfigMap | gracePeriodSeconds  | integer                                            |        0 |            0 | query | integer | 1 |
| deleteCoreV1CollectionNamespacedConfigMap | labelSelector       | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedConfigMap | limit               | integer                                            |        0 |            0 | query | integer | 1 |
| deleteCoreV1CollectionNamespacedConfigMap | orphanDependents    | boolean                                            |        0 |            0 | query | boolean | 1 |
| deleteCoreV1CollectionNamespacedConfigMap | propagationPolicy   | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedConfigMap | resourceVersion     | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedConfigMap | timeoutSeconds      | integer                                            |        0 |            0 | query | integer | 1 |
| deleteCoreV1CollectionNamespacedConfigMap | watch               | boolean                                            |        0 |            0 | query | boolean | 1 |
| listCoreV1NamespacedConfigMap             | allowWatchBookmarks | boolean                                            |        0 |            0 | query | boolean | 1 |
| listCoreV1NamespacedConfigMap             | continue            | string                                             |        0 |            0 | query | string  | 1 |
| listCoreV1NamespacedConfigMap             | fieldSelector       | string                                             |        0 |            0 | query | string  | 1 |
| listCoreV1NamespacedConfigMap             | labelSelector       | string                                             |        0 |            0 | query | string  | 1 |
| listCoreV1NamespacedConfigMap             | limit               | integer                                            |        0 |            0 | query | integer | 1 |
| listCoreV1NamespacedConfigMap             | resourceVersion     | string                                             |        0 |            0 | query | string  | 1 |
| listCoreV1NamespacedConfigMap             | timeoutSeconds      | integer                                            |        0 |            0 | query | integer | 1 |
| listCoreV1NamespacedConfigMap             | watch               | boolean                                            |        0 |            0 | query | boolean | 1 |
| createCoreV1NamespacedConfigMap           | body                | io.k8s.api.core.v1.ConfigMap                       |        0 |            0 | body  |         |   |
| createCoreV1NamespacedConfigMap           | dryRun              | string                                             |        0 |            0 | query | string  | 1 |
| createCoreV1NamespacedConfigMap           | fieldManager        | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1NamespacedConfigMap           | body                | io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions |        0 |            0 | body  |         |   |
| deleteCoreV1NamespacedConfigMap           | dryRun              | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1NamespacedConfigMap           | gracePeriodSeconds  | integer                                            |        0 |            0 | query | integer | 1 |
| deleteCoreV1NamespacedConfigMap           | orphanDependents    | boolean                                            |        0 |            0 | query | boolean | 1 |
| deleteCoreV1NamespacedConfigMap           | propagationPolicy   | string                                             |        0 |            0 | query | string  | 1 |
| readCoreV1NamespacedConfigMap             | exact               | boolean                                            |        0 |            0 | query | boolean | 1 |
| readCoreV1NamespacedConfigMap             | export              | boolean                                            |        0 |            0 | query | boolean | 1 |
| patchCoreV1NamespacedConfigMap            | body                | io.k8s.apimachinery.pkg.apis.meta.v1.Patch         |        0 |            0 | body  |         |   |
| patchCoreV1NamespacedConfigMap            | dryRun              | string                                             |        0 |            0 | query | string  | 1 |
| patchCoreV1NamespacedConfigMap            | fieldManager        | string                                             |        0 |            0 | query | string  | 1 |
| patchCoreV1NamespacedConfigMap            | force               | boolean                                            |        0 |            0 | query | boolean | 1 |
| replaceCoreV1NamespacedConfigMap          | body                | io.k8s.api.core.v1.ConfigMap                       |        0 |            0 | body  |         |   |
| replaceCoreV1NamespacedConfigMap          | dryRun              | string                                             |        0 |            0 | query | string  | 1 |
| replaceCoreV1NamespacedConfigMap          | fieldManager        | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEndpoints | allowWatchBookmarks | boolean                                            |        0 |            0 | query | boolean | 1 |
| deleteCoreV1CollectionNamespacedEndpoints | body                | io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions |        0 |            0 | body  |         |   |
| deleteCoreV1CollectionNamespacedEndpoints | continue            | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEndpoints | dryRun              | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEndpoints | fieldSelector       | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEndpoints | gracePeriodSeconds  | integer                                            |        0 |            0 | query | integer | 1 |
| deleteCoreV1CollectionNamespacedEndpoints | labelSelector       | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEndpoints | limit               | integer                                            |        0 |            0 | query | integer | 1 |
| deleteCoreV1CollectionNamespacedEndpoints | orphanDependents    | boolean                                            |        0 |            0 | query | boolean | 1 |
| deleteCoreV1CollectionNamespacedEndpoints | propagationPolicy   | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEndpoints | resourceVersion     | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEndpoints | timeoutSeconds      | integer                                            |        0 |            0 | query | integer | 1 |
| deleteCoreV1CollectionNamespacedEndpoints | watch               | boolean                                            |        0 |            0 | query | boolean | 1 |
| listCoreV1NamespacedEndpoints             | allowWatchBookmarks | boolean                                            |        0 |            0 | query | boolean | 1 |
| listCoreV1NamespacedEndpoints             | continue            | string                                             |        0 |            0 | query | string  | 1 |
| listCoreV1NamespacedEndpoints             | fieldSelector       | string                                             |        0 |            0 | query | string  | 1 |
| listCoreV1NamespacedEndpoints             | labelSelector       | string                                             |        0 |            0 | query | string  | 1 |
| listCoreV1NamespacedEndpoints             | limit               | integer                                            |        0 |            0 | query | integer | 1 |
| listCoreV1NamespacedEndpoints             | resourceVersion     | string                                             |        0 |            0 | query | string  | 1 |
| listCoreV1NamespacedEndpoints             | timeoutSeconds      | integer                                            |        0 |            0 | query | integer | 1 |
| listCoreV1NamespacedEndpoints             | watch               | boolean                                            |        0 |            0 | query | boolean | 1 |
| createCoreV1NamespacedEndpoints           | body                | io.k8s.api.core.v1.Endpoints                       |        0 |            0 | body  |         |   |
| createCoreV1NamespacedEndpoints           | dryRun              | string                                             |        0 |            0 | query | string  | 1 |
| createCoreV1NamespacedEndpoints           | fieldManager        | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1NamespacedEndpoints           | body                | io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions |        0 |            0 | body  |         |   |
| deleteCoreV1NamespacedEndpoints           | dryRun              | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1NamespacedEndpoints           | gracePeriodSeconds  | integer                                            |        0 |            0 | query | integer | 1 |
| deleteCoreV1NamespacedEndpoints           | orphanDependents    | boolean                                            |        0 |            0 | query | boolean | 1 |
| deleteCoreV1NamespacedEndpoints           | propagationPolicy   | string                                             |        0 |            0 | query | string  | 1 |
| readCoreV1NamespacedEndpoints             | exact               | boolean                                            |        0 |            0 | query | boolean | 1 |
| readCoreV1NamespacedEndpoints             | export              | boolean                                            |        0 |            0 | query | boolean | 1 |
| patchCoreV1NamespacedEndpoints            | body                | io.k8s.apimachinery.pkg.apis.meta.v1.Patch         |        0 |            0 | body  |         |   |
| patchCoreV1NamespacedEndpoints            | dryRun              | string                                             |        0 |            0 | query | string  | 1 |
| patchCoreV1NamespacedEndpoints            | fieldManager        | string                                             |        0 |            0 | query | string  | 1 |
| patchCoreV1NamespacedEndpoints            | force               | boolean                                            |        0 |            0 | query | boolean | 1 |
| replaceCoreV1NamespacedEndpoints          | body                | io.k8s.api.core.v1.Endpoints                       |        0 |            0 | body  |         |   |
| replaceCoreV1NamespacedEndpoints          | dryRun              | string                                             |        0 |            0 | query | string  | 1 |
| replaceCoreV1NamespacedEndpoints          | fieldManager        | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEvent     | allowWatchBookmarks | boolean                                            |        0 |            0 | query | boolean | 1 |
| deleteCoreV1CollectionNamespacedEvent     | body                | io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions |        0 |            0 | body  |         |   |
| deleteCoreV1CollectionNamespacedEvent     | continue            | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEvent     | dryRun              | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEvent     | fieldSelector       | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEvent     | gracePeriodSeconds  | integer                                            |        0 |            0 | query | integer | 1 |
| deleteCoreV1CollectionNamespacedEvent     | labelSelector       | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEvent     | limit               | integer                                            |        0 |            0 | query | integer | 1 |
| deleteCoreV1CollectionNamespacedEvent     | orphanDependents    | boolean                                            |        0 |            0 | query | boolean | 1 |
| deleteCoreV1CollectionNamespacedEvent     | propagationPolicy   | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEvent     | resourceVersion     | string                                             |        0 |            0 | query | string  | 1 |
| deleteCoreV1CollectionNamespacedEvent     | timeoutSeconds      | integer                                            |        0 |            0 | query | integer | 1 |






*** operation responses

#+BEGIN_SRC sqlite :results raw
  with
  operations as (
    with
      paths as (
        select
          path.key as path,
          path.value as operations
          from api_swagger
               , json_each(api_swagger.data, '$.paths') as path
          -- where path.key is not 'parameters'
          --   and lower(json_extract(o.value, '$.description')) not like '%deprecated%'
      )
    select
      json_extract(op.value, '$.operationId') as id,  
      json_extract(op.value, '$.responses') as responses
      from paths
           , json_each(paths.operations) as op
           -- , json_each(paths.value, '$.parameters') as params
  )
  select operations.id as response_op
         , response.key
         , replace(
           CASE
           WHEN (json_extract(response.value, '$.schema') is not null AND (json_extract(response.value, '$.schema.text') is not null))
             THEN json_extract(response.value, '$.schema.type') 
           WHEN (json_extract(response.value, '$.schema') is not null AND (json_extract(response.value, '$.schema.$ref') is not null))
             THEN json_extract(response.value, '$.schema.$ref') 
           ELSE ''
           END, '#/definitions/','') AS response_schema
           , json_extract(response.value, '$.description') as description

    from operations
         , json_each(operations.responses) as response
  limit 100
  ;
#+END_SRC

#+RESULTS:
| response_op                                           | key | response_schema                                      | description  |
|-------------------------------------------------------+-----+------------------------------------------------------+--------------|
| getCoreAPIVersions                                    | 200 | io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions     | OK           |
| getCoreAPIVersions                                    | 401 |                                                      | Unauthorized |
| getCoreV1APIResources                                 | 200 | io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList | OK           |
| getCoreV1APIResources                                 | 401 |                                                      | Unauthorized |
| listCoreV1ComponentStatus                             | 200 | io.k8s.api.core.v1.ComponentStatusList               | OK           |
| listCoreV1ComponentStatus                             | 401 |                                                      | Unauthorized |
| readCoreV1ComponentStatus                             | 200 | io.k8s.api.core.v1.ComponentStatus                   | OK           |
| readCoreV1ComponentStatus                             | 401 |                                                      | Unauthorized |
| listCoreV1ConfigMapForAllNamespaces                   | 200 | io.k8s.api.core.v1.ConfigMapList                     | OK           |
| listCoreV1ConfigMapForAllNamespaces                   | 401 |                                                      | Unauthorized |
| listCoreV1EndpointsForAllNamespaces                   | 200 | io.k8s.api.core.v1.EndpointsList                     | OK           |
| listCoreV1EndpointsForAllNamespaces                   | 401 |                                                      | Unauthorized |
| listCoreV1EventForAllNamespaces                       | 200 | io.k8s.api.core.v1.EventList                         | OK           |
| listCoreV1EventForAllNamespaces                       | 401 |                                                      | Unauthorized |
| listCoreV1LimitRangeForAllNamespaces                  | 200 | io.k8s.api.core.v1.LimitRangeList                    | OK           |
| listCoreV1LimitRangeForAllNamespaces                  | 401 |                                                      | Unauthorized |
| listCoreV1Namespace                                   | 200 | io.k8s.api.core.v1.NamespaceList                     | OK           |
| listCoreV1Namespace                                   | 401 |                                                      | Unauthorized |
| createCoreV1Namespace                                 | 200 | io.k8s.api.core.v1.Namespace                         | OK           |
| createCoreV1Namespace                                 | 201 | io.k8s.api.core.v1.Namespace                         | Created      |
| createCoreV1Namespace                                 | 202 | io.k8s.api.core.v1.Namespace                         | Accepted     |
| createCoreV1Namespace                                 | 401 |                                                      | Unauthorized |
| createCoreV1NamespacedBinding                         | 200 | io.k8s.api.core.v1.Binding                           | OK           |
| createCoreV1NamespacedBinding                         | 201 | io.k8s.api.core.v1.Binding                           | Created      |
| createCoreV1NamespacedBinding                         | 202 | io.k8s.api.core.v1.Binding                           | Accepted     |
| createCoreV1NamespacedBinding                         | 401 |                                                      | Unauthorized |
| deleteCoreV1CollectionNamespacedConfigMap             | 200 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | OK           |
| deleteCoreV1CollectionNamespacedConfigMap             | 401 |                                                      | Unauthorized |
| listCoreV1NamespacedConfigMap                         | 200 | io.k8s.api.core.v1.ConfigMapList                     | OK           |
| listCoreV1NamespacedConfigMap                         | 401 |                                                      | Unauthorized |
| createCoreV1NamespacedConfigMap                       | 200 | io.k8s.api.core.v1.ConfigMap                         | OK           |
| createCoreV1NamespacedConfigMap                       | 201 | io.k8s.api.core.v1.ConfigMap                         | Created      |
| createCoreV1NamespacedConfigMap                       | 202 | io.k8s.api.core.v1.ConfigMap                         | Accepted     |
| createCoreV1NamespacedConfigMap                       | 401 |                                                      | Unauthorized |
| deleteCoreV1NamespacedConfigMap                       | 200 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | OK           |
| deleteCoreV1NamespacedConfigMap                       | 202 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | Accepted     |
| deleteCoreV1NamespacedConfigMap                       | 401 |                                                      | Unauthorized |
| readCoreV1NamespacedConfigMap                         | 200 | io.k8s.api.core.v1.ConfigMap                         | OK           |
| readCoreV1NamespacedConfigMap                         | 401 |                                                      | Unauthorized |
| patchCoreV1NamespacedConfigMap                        | 200 | io.k8s.api.core.v1.ConfigMap                         | OK           |
| patchCoreV1NamespacedConfigMap                        | 401 |                                                      | Unauthorized |
| replaceCoreV1NamespacedConfigMap                      | 200 | io.k8s.api.core.v1.ConfigMap                         | OK           |
| replaceCoreV1NamespacedConfigMap                      | 201 | io.k8s.api.core.v1.ConfigMap                         | Created      |
| replaceCoreV1NamespacedConfigMap                      | 401 |                                                      | Unauthorized |
| deleteCoreV1CollectionNamespacedEndpoints             | 200 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | OK           |
| deleteCoreV1CollectionNamespacedEndpoints             | 401 |                                                      | Unauthorized |
| listCoreV1NamespacedEndpoints                         | 200 | io.k8s.api.core.v1.EndpointsList                     | OK           |
| listCoreV1NamespacedEndpoints                         | 401 |                                                      | Unauthorized |
| createCoreV1NamespacedEndpoints                       | 200 | io.k8s.api.core.v1.Endpoints                         | OK           |
| createCoreV1NamespacedEndpoints                       | 201 | io.k8s.api.core.v1.Endpoints                         | Created      |
| createCoreV1NamespacedEndpoints                       | 202 | io.k8s.api.core.v1.Endpoints                         | Accepted     |
| createCoreV1NamespacedEndpoints                       | 401 |                                                      | Unauthorized |
| deleteCoreV1NamespacedEndpoints                       | 200 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | OK           |
| deleteCoreV1NamespacedEndpoints                       | 202 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | Accepted     |
| deleteCoreV1NamespacedEndpoints                       | 401 |                                                      | Unauthorized |
| readCoreV1NamespacedEndpoints                         | 200 | io.k8s.api.core.v1.Endpoints                         | OK           |
| readCoreV1NamespacedEndpoints                         | 401 |                                                      | Unauthorized |
| patchCoreV1NamespacedEndpoints                        | 200 | io.k8s.api.core.v1.Endpoints                         | OK           |
| patchCoreV1NamespacedEndpoints                        | 401 |                                                      | Unauthorized |
| replaceCoreV1NamespacedEndpoints                      | 200 | io.k8s.api.core.v1.Endpoints                         | OK           |
| replaceCoreV1NamespacedEndpoints                      | 201 | io.k8s.api.core.v1.Endpoints                         | Created      |
| replaceCoreV1NamespacedEndpoints                      | 401 |                                                      | Unauthorized |
| deleteCoreV1CollectionNamespacedEvent                 | 200 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | OK           |
| deleteCoreV1CollectionNamespacedEvent                 | 401 |                                                      | Unauthorized |
| listCoreV1NamespacedEvent                             | 200 | io.k8s.api.core.v1.EventList                         | OK           |
| listCoreV1NamespacedEvent                             | 401 |                                                      | Unauthorized |
| createCoreV1NamespacedEvent                           | 200 | io.k8s.api.core.v1.Event                             | OK           |
| createCoreV1NamespacedEvent                           | 201 | io.k8s.api.core.v1.Event                             | Created      |
| createCoreV1NamespacedEvent                           | 202 | io.k8s.api.core.v1.Event                             | Accepted     |
| createCoreV1NamespacedEvent                           | 401 |                                                      | Unauthorized |
| deleteCoreV1NamespacedEvent                           | 200 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | OK           |
| deleteCoreV1NamespacedEvent                           | 202 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | Accepted     |
| deleteCoreV1NamespacedEvent                           | 401 |                                                      | Unauthorized |
| readCoreV1NamespacedEvent                             | 200 | io.k8s.api.core.v1.Event                             | OK           |
| readCoreV1NamespacedEvent                             | 401 |                                                      | Unauthorized |
| patchCoreV1NamespacedEvent                            | 200 | io.k8s.api.core.v1.Event                             | OK           |
| patchCoreV1NamespacedEvent                            | 401 |                                                      | Unauthorized |
| replaceCoreV1NamespacedEvent                          | 200 | io.k8s.api.core.v1.Event                             | OK           |
| replaceCoreV1NamespacedEvent                          | 201 | io.k8s.api.core.v1.Event                             | Created      |
| replaceCoreV1NamespacedEvent                          | 401 |                                                      | Unauthorized |
| deleteCoreV1CollectionNamespacedLimitRange            | 200 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | OK           |
| deleteCoreV1CollectionNamespacedLimitRange            | 401 |                                                      | Unauthorized |
| listCoreV1NamespacedLimitRange                        | 200 | io.k8s.api.core.v1.LimitRangeList                    | OK           |
| listCoreV1NamespacedLimitRange                        | 401 |                                                      | Unauthorized |
| createCoreV1NamespacedLimitRange                      | 200 | io.k8s.api.core.v1.LimitRange                        | OK           |
| createCoreV1NamespacedLimitRange                      | 201 | io.k8s.api.core.v1.LimitRange                        | Created      |
| createCoreV1NamespacedLimitRange                      | 202 | io.k8s.api.core.v1.LimitRange                        | Accepted     |
| createCoreV1NamespacedLimitRange                      | 401 |                                                      | Unauthorized |
| deleteCoreV1NamespacedLimitRange                      | 200 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | OK           |
| deleteCoreV1NamespacedLimitRange                      | 202 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | Accepted     |
| deleteCoreV1NamespacedLimitRange                      | 401 |                                                      | Unauthorized |
| readCoreV1NamespacedLimitRange                        | 200 | io.k8s.api.core.v1.LimitRange                        | OK           |
| readCoreV1NamespacedLimitRange                        | 401 |                                                      | Unauthorized |
| patchCoreV1NamespacedLimitRange                       | 200 | io.k8s.api.core.v1.LimitRange                        | OK           |
| patchCoreV1NamespacedLimitRange                       | 401 |                                                      | Unauthorized |
| replaceCoreV1NamespacedLimitRange                     | 200 | io.k8s.api.core.v1.LimitRange                        | OK           |
| replaceCoreV1NamespacedLimitRange                     | 201 | io.k8s.api.core.v1.LimitRange                        | Created      |
| replaceCoreV1NamespacedLimitRange                     | 401 |                                                      | Unauthorized |
| deleteCoreV1CollectionNamespacedPersistentVolumeClaim | 200 | io.k8s.apimachinery.pkg.apis.meta.v1.Status          | OK           |
| deleteCoreV1CollectionNamespacedPersistentVolumeClaim | 401 |                                                      | Unauthorized |







*** schema

#+BEGIN_SRC sqlite
   with definitions as (select d.key as schema, d.value as attributes
      from api_swagger
           , json_each(api_swagger.data, '$.definitions') as d)
   select
     d.schema as kind
     , json_extract(d.attributes, '$.type') as schema_type
     -- , gvk.value as val
     -- , json_extract(d.attndributes, '$.required') as param_type
     , json_extract(gvk.value, '$.kind') as k8s_kind
     , json_extract(gvk.value, '$.group') as k8s_group
     , json_extract(gvk.value, '$.version') as k8s_version
     , json_extract(d.attributes, '$.required') as required_fields
     , json_extract(d.attributes, '$.properties') as properties
    --instr(json_extract(o.value, '$.tags'),'_') AS h,
     -- , json_extract(d.attributes, '$.x-kubernetes-group-version-kind') as k8s
     -- , json_extract(d.attributes, '$.x-kubernetes-group-version-kind.group') as k8s_group
     -- , json_extract(d.attributes, '$.x-kubernetes-group-version-kind.group') as k8s_group
     -- , json_extract(json_extract(d.attributes, '$.x-kubernetes-group-version-kind'), '$.group') as ak8s_group
     -- , json_extract(json_extract(d.attributes, '$.x-kubernetes-group-version-kind'), '$.version') as ak8s_version
     -- ,,, json_extract(json_extract(d.attributes, '$.x-kubernetes-group-version-kind'), '$.kind') as ak8s_kind
     --  , json_extract(d.attributes, '$.x-kubernetes-group-version-kind.kind') as k8s_kind
     -- , json_extract(gvk, '$.version') as ak8s_version
     -- , json_extract(gvk, '$.kind') as ak8s_kind
     -- , json_extract(d.attributes, '$.x-kubernetes-group-version-kind') as ak8s_kind
     -- , json_extract(d.attributes, '$.x-kubernetes-group-version-kind.kind') as ak8s_kind
     -- , json_extract(d.attributes, '$.x-kubernetes-group-version-kind.group') as ak8s_group
     -- , json_extract(d.attributes, '$.x-kubernetes-group-version-kind.version') as ak8s_version
     -- , json_extract(d.attributes, '$.required') as required
     -- , json_extract(d.attributes, '$.x-kubernetes-group-version-version') as ik8s_version
     -- , json_extract(d.attributes, '$.x-kubernetes-group-version-kind.group') as k8s_group
     -- , json_extract(d.attributes, '$.x-kubernetes-group-version-kind.version') as k8s_version
     -- , json_extract(d.attributes, '$.x-kubernetes-group-version-kind.kind') as k8s_kind
     -- , json_extract(d.attributes, '$.x-kubernetes-group-version-group') as ik8s_group
     -- json_extract(o.value, '$.operationId') as op_id,
     --paths.key as path,
     --o.key as http_method
     from definitions as d
         , json_each(d.attributes, '$.x-kubernetes-group-version-kind') as gvk
          -- , json_each(definitions.attributes) as attribs
     limit 60
  --  limit 40
   ;
#+END_SRC

#+RESULTS:
| kind                                                                        | schema_type | k8s_kind                           | k8s_group                    | k8s_version | required_fields   | properties|
||
| io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration            | object      | MutatingWebhookConfiguration       | admissionregistration.k8s.io | v1          |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."},"webhooks":{"description":"Webhooks is a list of webhooks and the affected resources and operations.","items":{"$ref":"#/definitions/io.k8s.api.admissionregistration.v1.MutatingWebhook"},"type":"array","x-kubernetes-patch-merge-key":"name","x-kubernetes-patch-strategy":"merge                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |
| io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList        | object      | MutatingWebhookConfigurationList   | admissionregistration.k8s.io | v1          | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of MutatingWebhookConfiguration.","items":{"$ref":"#/definitions/io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds|
| io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration          | object      | ValidatingWebhookConfiguration     | admissionregistration.k8s.io | v1          |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."},"webhooks":{"description":"Webhooks is a list of webhooks and the affected resources and operations.","items":{"$ref":"#/definitions/io.k8s.api.admissionregistration.v1.ValidatingWebhook"},"type":"array","x-kubernetes-patch-merge-key":"name","x-kubernetes-patch-strategy":"merge                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |
| io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList      | object      | ValidatingWebhookConfigurationList | admissionregistration.k8s.io | v1          | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of ValidatingWebhookConfiguration.","items":{"$ref":"#/definitions/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds|
| io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfiguration       | object      | MutatingWebhookConfiguration       | admissionregistration.k8s.io | v1beta1     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."},"webhooks":{"description":"Webhooks is a list of webhooks and the affected resources and operations.","items":{"$ref":"#/definitions/io.k8s.api.admissionregistration.v1beta1.MutatingWebhook"},"type":"array","x-kubernetes-patch-merge-key":"name","x-kubernetes-patch-strategy":"merge                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |
| io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfigurationList   | object      | MutatingWebhookConfigurationList   | admissionregistration.k8s.io | v1beta1     | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of MutatingWebhookConfiguration.","items":{"$ref":"#/definitions/io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfiguration"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds|
| io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfiguration     | object      | ValidatingWebhookConfiguration     | admissionregistration.k8s.io | v1beta1     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."},"webhooks":{"description":"Webhooks is a list of webhooks and the affected resources and operations.","items":{"$ref":"#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingWebhook"},"type":"array","x-kubernetes-patch-merge-key":"name","x-kubernetes-patch-strategy":"merge                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |
| io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfigurationList | object      | ValidatingWebhookConfigurationList | admissionregistration.k8s.io | v1beta1     | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of ValidatingWebhookConfiguration.","items":{"$ref":"#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfiguration"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds|
| io.k8s.api.apps.v1.ControllerRevision                                       | object      | ControllerRevision                 | apps                         | v1          | revision          | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"data":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension","description":"Data is the serialized representation of the state."},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"},"revision":{"description":"Revision indicates the revision of the state represented by Data.","format":"int64","type":"integer                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |
| io.k8s.api.apps.v1.ControllerRevisionList                                   | object      | ControllerRevisionList             | apps                         | v1          | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"Items is the list of ControllerRevisions","items":{"$ref":"#/definitions/io.k8s.api.apps.v1.ControllerRevision"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata|
| io.k8s.api.apps.v1.DaemonSet                                                | object      | DaemonSet                          | apps                         | v1          |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"},"spec":{"$ref":"#/definitions/io.k8s.api.apps.v1.DaemonSetSpec","description":"The desired behavior of this daemon set. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"},"status":{"$ref":"#/definitions/io.k8s.api.apps.v1.DaemonSetStatus","description":"The current status of this daemon set. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status                                                                                                                                                                                            |
| io.k8s.api.apps.v1.DaemonSetList                                            | object      | DaemonSetList                      | apps                         | v1          | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"A list of daemon sets.","items":{"$ref":"#/definitions/io.k8s.api.apps.v1.DaemonSet"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata|
| io.k8s.api.apps.v1.Deployment                                               | object      | Deployment                         | apps                         | v1          |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object metadata."},"spec":{"$ref":"#/definitions/io.k8s.api.apps.v1.DeploymentSpec","description":"Specification of the desired behavior of the Deployment."},"status":{"$ref":"#/definitions/io.k8s.api.apps.v1.DeploymentStatus","description":"Most recently observed status of the Deployment|
| io.k8s.api.apps.v1.DeploymentList                                           | object      | DeploymentList                     | apps                         | v1          | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"Items is the list of Deployments.","items":{"$ref":"#/definitions/io.k8s.api.apps.v1.Deployment"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata|
| io.k8s.api.apps.v1.ReplicaSet                                               | object      | ReplicaSet                         | apps                         | v1          |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s) that the ReplicaSet manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"},"spec":{"$ref":"#/definitions/io.k8s.api.apps.v1.ReplicaSetSpec","description":"Spec defines the specification of the desired behavior of the ReplicaSet. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"},"status":{"$ref":"#/definitions/io.k8s.api.apps.v1.ReplicaSetStatus","description":"Status is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status           |
| io.k8s.api.apps.v1.ReplicaSetList                                           | object      | ReplicaSetList                     | apps                         | v1          | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller","items":{"$ref":"#/definitions/io.k8s.api.apps.v1.ReplicaSet"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds|
| io.k8s.api.apps.v1.StatefulSet                                              | object      | StatefulSet                        | apps                         | v1          |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.apps.v1.StatefulSetSpec","description":"Spec defines the desired identities of pods in this set."},"status":{"$ref":"#/definitions/io.k8s.api.apps.v1.StatefulSetStatus","description":"Status is the current status of Pods in this StatefulSet. This data may be out of date by some window of time|
| io.k8s.api.apps.v1.StatefulSetList                                          | object      | StatefulSetList                    | apps                         | v1          | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"items":{"$ref":"#/definitions/io.k8s.api.apps.v1.StatefulSet"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |
| io.k8s.api.apps.v1beta1.ControllerRevision                                  | object      | ControllerRevision                 | apps                         | v1beta1     | revision          | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"data":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension","description":"Data is the serialized representation of the state."},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"},"revision":{"description":"Revision indicates the revision of the state represented by Data.","format":"int64","type":"integer                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |
| io.k8s.api.apps.v1beta1.ControllerRevisionList                              | object      | ControllerRevisionList             | apps                         | v1beta1     | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"Items is the list of ControllerRevisions","items":{"$ref":"#/definitions/io.k8s.api.apps.v1beta1.ControllerRevision"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata|
| io.k8s.api.apps.v1beta1.Deployment                                          | object      | Deployment                         | apps                         | v1beta1     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object metadata."},"spec":{"$ref":"#/definitions/io.k8s.api.apps.v1beta1.DeploymentSpec","description":"Specification of the desired behavior of the Deployment."},"status":{"$ref":"#/definitions/io.k8s.api.apps.v1beta1.DeploymentStatus","description":"Most recently observed status of the Deployment|
| io.k8s.api.apps.v1beta1.DeploymentList                                      | object      | DeploymentList                     | apps                         | v1beta1     | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"Items is the list of Deployments.","items":{"$ref":"#/definitions/io.k8s.api.apps.v1beta1.Deployment"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata|
| io.k8s.api.apps.v1beta1.DeploymentRollback                                  | object      | DeploymentRollback                 | apps                         | v1beta1     | name","rollbackTo | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"name":{"description":"Required: This must match the Name of a deployment.","type":"string"},"rollbackTo":{"$ref":"#/definitions/io.k8s.api.apps.v1beta1.RollbackConfig","description":"The config of this deployment rollback."},"updatedAnnotations":{"additionalProperties":{"type":"string"},"description":"The annotations to be updated to a deployment","type":"object|
| io.k8s.api.apps.v1beta1.Scale                                               | object      | Scale                              | apps                         | v1beta1     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."},"spec":{"$ref":"#/definitions/io.k8s.api.apps.v1beta1.ScaleSpec","description":"defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status."},"status":{"$ref":"#/definitions/io.k8s.api.apps.v1beta1.ScaleStatus","description":"current status of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status. Read-only.                                                                                                                                                                                                                                                                                       |
| io.k8s.api.apps.v1beta1.StatefulSet                                         | object      | StatefulSet                        | apps                         | v1beta1     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.apps.v1beta1.StatefulSetSpec","description":"Spec defines the desired identities of pods in this set."},"status":{"$ref":"#/definitions/io.k8s.api.apps.v1beta1.StatefulSetStatus","description":"Status is the current status of Pods in this StatefulSet. This data may be out of date by some window of time|
| io.k8s.api.apps.v1beta1.StatefulSetList                                     | object      | StatefulSetList                    | apps                         | v1beta1     | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"items":{"$ref":"#/definitions/io.k8s.api.apps.v1beta1.StatefulSet"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta|
| io.k8s.api.apps.v1beta2.ControllerRevision                                  | object      | ControllerRevision                 | apps                         | v1beta2     | revision          | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"data":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension","description":"Data is the serialized representation of the state."},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"},"revision":{"description":"Revision indicates the revision of the state represented by Data.","format":"int64","type":"integer                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |
| io.k8s.api.apps.v1beta2.ControllerRevisionList                              | object      | ControllerRevisionList             | apps                         | v1beta2     | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"Items is the list of ControllerRevisions","items":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.ControllerRevision"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata|
| io.k8s.api.apps.v1beta2.DaemonSet                                           | object      | DaemonSet                          | apps                         | v1beta2     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"},"spec":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.DaemonSetSpec","description":"The desired behavior of this daemon set. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"},"status":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.DaemonSetStatus","description":"The current status of this daemon set. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status                                                                                                                                                                                  |
| io.k8s.api.apps.v1beta2.DaemonSetList                                       | object      | DaemonSetList                      | apps                         | v1beta2     | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"A list of daemon sets.","items":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.DaemonSet"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata|
| io.k8s.api.apps.v1beta2.Deployment                                          | object      | Deployment                         | apps                         | v1beta2     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object metadata."},"spec":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.DeploymentSpec","description":"Specification of the desired behavior of the Deployment."},"status":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.DeploymentStatus","description":"Most recently observed status of the Deployment|
| io.k8s.api.apps.v1beta2.DeploymentList                                      | object      | DeploymentList                     | apps                         | v1beta2     | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"Items is the list of Deployments.","items":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.Deployment"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata|
| io.k8s.api.apps.v1beta2.ReplicaSet                                          | object      | ReplicaSet                         | apps                         | v1beta2     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s) that the ReplicaSet manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"},"spec":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.ReplicaSetSpec","description":"Spec defines the specification of the desired behavior of the ReplicaSet. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"},"status":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.ReplicaSetStatus","description":"Status is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status |
| io.k8s.api.apps.v1beta2.ReplicaSetList                                      | object      | ReplicaSetList                     | apps                         | v1beta2     | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller","items":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.ReplicaSet"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds|
| io.k8s.api.apps.v1beta2.Scale                                               | object      | Scale                              | apps                         | v1beta2     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."},"spec":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.ScaleSpec","description":"defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status."},"status":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.ScaleStatus","description":"current status of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status. Read-only.                                                                                                                                                                                                                                                                                       |
| io.k8s.api.apps.v1beta2.StatefulSet                                         | object      | StatefulSet                        | apps                         | v1beta2     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.StatefulSetSpec","description":"Spec defines the desired identities of pods in this set."},"status":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.StatefulSetStatus","description":"Status is the current status of Pods in this StatefulSet. This data may be out of date by some window of time|
| io.k8s.api.apps.v1beta2.StatefulSetList                                     | object      | StatefulSetList                    | apps                         | v1beta2     | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"items":{"$ref":"#/definitions/io.k8s.api.apps.v1beta2.StatefulSet"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta|
| io.k8s.api.auditregistration.v1alpha1.AuditSink                             | object      | AuditSink                          | auditregistration.k8s.io     | v1alpha1    |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.auditregistration.v1alpha1.AuditSinkSpec","description":"Spec defines the audit configuration spec                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |
| io.k8s.api.auditregistration.v1alpha1.AuditSinkList                         | object      | AuditSinkList                      | auditregistration.k8s.io     | v1alpha1    | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of audit configurations.","items":{"$ref":"#/definitions/io.k8s.api.auditregistration.v1alpha1.AuditSink"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta|
| io.k8s.api.authentication.v1.TokenRequest                                   | object      | TokenRequest                       | authentication.k8s.io        | v1          | spec              | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.authentication.v1.TokenRequestSpec"},"status":{"$ref":"#/definitions/io.k8s.api.authentication.v1.TokenRequestStatus|
| io.k8s.api.authentication.v1.TokenReview                                    | object      | TokenReview                        | authentication.k8s.io        | v1          | spec              | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.authentication.v1.TokenReviewSpec","description":"Spec holds information about the request being evaluated"},"status":{"$ref":"#/definitions/io.k8s.api.authentication.v1.TokenReviewStatus","description":"Status is filled in by the server and indicates whether the request can be authenticated|
| io.k8s.api.authentication.v1beta1.TokenReview                               | object      | TokenReview                        | authentication.k8s.io        | v1beta1     | spec              | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.authentication.v1beta1.TokenReviewSpec","description":"Spec holds information about the request being evaluated"},"status":{"$ref":"#/definitions/io.k8s.api.authentication.v1beta1.TokenReviewStatus","description":"Status is filled in by the server and indicates whether the request can be authenticated|
| io.k8s.api.authorization.v1.LocalSubjectAccessReview                        | object      | LocalSubjectAccessReview           | authorization.k8s.io         | v1          | spec              | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewSpec","description":"Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted."},"status":{"$ref":"#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus","description":"Status is filled in by the server and indicates whether the request is allowed or not                                                                                                                                                                                                                                                                                                                                                                                                                                                        |
| io.k8s.api.authorization.v1.SelfSubjectAccessReview                         | object      | SelfSubjectAccessReview            | authorization.k8s.io         | v1          | spec              | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec","description":"Spec holds information about the request being evaluated.  user and groups must be empty"},"status":{"$ref":"#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus","description":"Status is filled in by the server and indicates whether the request is allowed or not|
| io.k8s.api.authorization.v1.SelfSubjectRulesReview                          | object      | SelfSubjectRulesReview             | authorization.k8s.io         | v1          | spec              | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec","description":"Spec holds information about the request being evaluated."},"status":{"$ref":"#/definitions/io.k8s.api.authorization.v1.SubjectRulesReviewStatus","description":"Status is filled in by the server and indicates the set of actions a user can perform|
| io.k8s.api.authorization.v1.SubjectAccessReview                             | object      | SubjectAccessReview                | authorization.k8s.io         | v1          | spec              | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewSpec","description":"Spec holds information about the request being evaluated"},"status":{"$ref":"#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus","description":"Status is filled in by the server and indicates whether the request is allowed or not|
| io.k8s.api.authorization.v1beta1.LocalSubjectAccessReview                   | object      | LocalSubjectAccessReview           | authorization.k8s.io         | v1beta1     | spec              | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.authorization.v1beta1.SubjectAccessReviewSpec","description":"Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted."},"status":{"$ref":"#/definitions/io.k8s.api.authorization.v1beta1.SubjectAccessReviewStatus","description":"Status is filled in by the server and indicates whether the request is allowed or not                                                                                                                                                                                                                                                                                                                                                                                                                                              |
| io.k8s.api.authorization.v1beta1.SelfSubjectAccessReview                    | object      | SelfSubjectAccessReview            | authorization.k8s.io         | v1beta1     | spec              | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.authorization.v1beta1.SelfSubjectAccessReviewSpec","description":"Spec holds information about the request being evaluated.  user and groups must be empty"},"status":{"$ref":"#/definitions/io.k8s.api.authorization.v1beta1.SubjectAccessReviewStatus","description":"Status is filled in by the server and indicates whether the request is allowed or not|
| io.k8s.api.authorization.v1beta1.SelfSubjectRulesReview                     | object      | SelfSubjectRulesReview             | authorization.k8s.io         | v1beta1     | spec              | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.authorization.v1beta1.SelfSubjectRulesReviewSpec","description":"Spec holds information about the request being evaluated."},"status":{"$ref":"#/definitions/io.k8s.api.authorization.v1beta1.SubjectRulesReviewStatus","description":"Status is filled in by the server and indicates the set of actions a user can perform|
| io.k8s.api.authorization.v1beta1.SubjectAccessReview                        | object      | SubjectAccessReview                | authorization.k8s.io         | v1beta1     | spec              | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"},"spec":{"$ref":"#/definitions/io.k8s.api.authorization.v1beta1.SubjectAccessReviewSpec","description":"Spec holds information about the request being evaluated"},"status":{"$ref":"#/definitions/io.k8s.api.authorization.v1beta1.SubjectAccessReviewStatus","description":"Status is filled in by the server and indicates whether the request is allowed or not|
| io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler                           | object      | HorizontalPodAutoscaler            | autoscaling                  | v1          |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"},"spec":{"$ref":"#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec","description":"behaviour of autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status."},"status":{"$ref":"#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus","description":"current information about the autoscaler.                                                                                                                                                                                                                                                                                                                                                                        |
| io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList                       | object      | HorizontalPodAutoscalerList        | autoscaling                  | v1          | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"list of horizontal pod autoscaler objects.","items":{"$ref":"#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata|
| io.k8s.api.autoscaling.v1.Scale                                             | object      | Scale                              | autoscaling                  | v1          |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."},"spec":{"$ref":"#/definitions/io.k8s.api.autoscaling.v1.ScaleSpec","description":"defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status."},"status":{"$ref":"#/definitions/io.k8s.api.autoscaling.v1.ScaleStatus","description":"current status of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status. Read-only.                                                                                                                                                                                                                                                                                   |
| io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscaler                      | object      | HorizontalPodAutoscaler            | autoscaling                  | v2beta1     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"metadata is the standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"},"spec":{"$ref":"#/definitions/io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerSpec","description":"spec is the specification for the behaviour of the autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status."},"status":{"$ref":"#/definitions/io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerStatus","description":"status is the current information about the autoscaler.                                                                                                                                                                                                                                                                                          |
| io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerList                  | object      | HorizontalPodAutoscalerList        | autoscaling                  | v2beta1     | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"items is the list of horizontal pod autoscaler objects.","items":{"$ref":"#/definitions/io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscaler"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"metadata is the standard list metadata|
| io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscaler                      | object      | HorizontalPodAutoscaler            | autoscaling                  | v2beta2     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"metadata is the standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"},"spec":{"$ref":"#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerSpec","description":"spec is the specification for the behaviour of the autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status."},"status":{"$ref":"#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerStatus","description":"status is the current information about the autoscaler.                                                                                                                                                                                                                                                                                          |
| io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerList                  | object      | HorizontalPodAutoscalerList        | autoscaling                  | v2beta2     | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"items is the list of horizontal pod autoscaler objects.","items":{"$ref":"#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscaler"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"metadata is the standard list metadata|
| io.k8s.api.batch.v1.Job                                                     | object      | Job                                | batch                        | v1          |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"},"spec":{"$ref":"#/definitions/io.k8s.api.batch.v1.JobSpec","description":"Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"},"status":{"$ref":"#/definitions/io.k8s.api.batch.v1.JobStatus","description":"Current status of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status                                                                                                                                                                                                                                                                                                      |
| io.k8s.api.batch.v1.JobList                                                 | object      | JobList                            | batch                        | v1          | items             | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"items is the list of Jobs.","items":{"$ref":"#/definitions/io.k8s.api.batch.v1.Job"},"type":"array"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta","description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata|
| io.k8s.api.batch.v1beta1.CronJob                                            | object      | CronJob                            | batch                        | v1beta1     |                   | apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"$ref":"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta","description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"},"spec":{"$ref":"#/definitions/io.k8s.api.batch.v1beta1.CronJobSpec","description":"Specification of the desired behavior of a cron job, including the schedule. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"},"status":{"$ref":"#/definitions/io.k8s.api.batch.v1beta1.CronJobStatus","description":"Current status of a cron job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status                                                                                                                                                                                                                                                  |





*** schema fields

#+BEGIN_SRC sqlite
  with schemas as (
    with definitions as (select d.key as schema, d.value as attributes
                           from api_swagger
                                , json_each(api_swagger.data, '$.definitions') as d)
    select
      d.schema as schema
      , json_extract(d.attributes, '$.type') as schema_type
      -- , gvk.value as val
      -- , json_extract(d.attndributes, '$.required') as param_type
      , json_extract(gvk.value, '$.kind') as k8s_kind
      , json_extract(gvk.value, '$.group') as k8s_group
      , json_extract(gvk.value, '$.version') as k8s_version
      , json_extract(d.attributes, '$.required') as required_fields
      , json_extract(d.attributes, '$.properties') as properties
      from definitions as d
           , json_each(d.attributes, '$.x-kubernetes-group-version-kind') as gvk
  )
  select s.schema as field_schema
         , p.key as field_name
         , replace(
           CASE
           WHEN json_extract(p.value, '$.type') = 'string'
             THEN 'string'
           WHEN json_extract(p.value, '$.type') is null
             THEN json_extract(p.value, '$.$ref')
           WHEN json_extract(p.value, '$.type') = 'array'
            AND json_extract(p.value, '$.type') is null
             THEN json_extract(p.value, '$.$ref')
           WHEN json_extract(p.value, '$.type') = 'array'
            AND json_extract(p.value, '$.$ref') is null
             THEN json_extract(p.value, '$.type')
           ELSE 'integer'
           END, '#/definitions/','') as field_kind
           , CASE
           WHEN json_extract(p.value, '$.type') IS NULL
           THEN 'subtype'
           ELSE json_extract(p.value, '$.type')
           END AS field_type
         -- , json_array_length(s.required_fields) as required_count
         -- , s.required_fields
         , CASE 
           WHEN s.required_fields like '%"' || p.key || '"%' THEN 1
           ELSE 0
             END as required
         -- , json_extract(p.value, '$.description') as description

         -- , CASE
         --   WHEN '"' || p.key || '"' IN () THEN 1
         --   ELSE 0
         --   END as required
         , CASE
           WHEN (   json_extract(p.value, '$.description') like '%This field is alpha-level%'
                 or json_extract(p.value, '$.description') like '%This is an alpha field%'
                 or json_extract(p.value, '$.description') like '%This is an alpha feature%') THEN 'alpha'
           WHEN (   json_extract(p.value, '$.description') like '%This field is beta-level%'
                 or json_extract(p.value, '$.description') like '%This field is beta%'
                 or json_extract(p.value, '$.description') like '%This is a beta feature%'
                 or json_extract(p.value, '$.description') like '%This is an beta feature%'
                 or json_extract(p.value, '$.description') like '%This is an beta field%') THEN 'beta'
           ELSE 'ga'
             END AS release
         , CASE
           WHEN  json_extract(p.value, '$.description') like '%deprecated%' THEN 1
            ELSE 0
           END AS deprecated
         , CASE
           WHEN ( json_extract(p.value, '$.description') like '%requires the % feature gate to be enabled%'
                 or json_extract(p.value, '$.description') like '%depends on the % feature gate being enabled%'
                 or json_extract(p.value, '$.description') like '%requires the % feature flag to be enabled%'
                 or json_extract(p.value, '$.description') like '%honored if the API server enables the % feature gate%'
                 or json_extract(p.value, '$.description') like '%honored by servers that enable the % feature%'
                 or json_extract(p.value, '$.description') like '%requires enabling % feature gate%'
                 or json_extract(p.value, '$.description') like '%honored by clusters that enables the % feature%'
                 or json_extract(p.value, '$.description') like '%only if the % feature gate is enabled%'
           ) THEN 1
           ELSE 0
           END AS feature_gated
            
    from schemas as s
         , json_each(s.properties) as p
         -- where required
   -- where deprecated
   where feature_gated
   order by field_schema
   -- where 
   --     and required
  limit 100
  ;
#+END_SRC

#+RESULTS:
| field_schema                                 | field_name        | field_kind                       | field_type | required | release | deprecated | feature_gated |
|----------------------------------------------+-------------------+----------------------------------+------------+----------+---------+------------+---------------|
| io.k8s.api.node.v1beta1.RuntimeClass         | overhead          | io.k8s.api.node.v1beta1.Overhead | subtype    |        0 | alpha   |          0 |             1 |
| io.k8s.api.scheduling.v1.PriorityClass       | preemptionPolicy  | string                           | string     |        0 | alpha   |          0 |             1 |
| io.k8s.api.scheduling.v1alpha1.PriorityClass | preemptionPolicy  | string                           | string     |        0 | alpha   |          0 |             1 |
| io.k8s.api.scheduling.v1beta1.PriorityClass  | preemptionPolicy  | string                           | string     |        0 | alpha   |          0 |             1 |
| io.k8s.api.storage.v1.StorageClass           | allowedTopologies | array                            | array      |        0 | ga      |          0 |             1 |
| io.k8s.api.storage.v1.StorageClass           | volumeBindingMode | string                           | string     |        0 | ga      |          0 |             1 |
| io.k8s.api.storage.v1beta1.StorageClass      | allowedTopologies | array                            | array      |        0 | ga      |          0 |             1 |
| io.k8s.api.storage.v1beta1.StorageClass      | volumeBindingMode | string                           | string     |        0 | ga      |          0 |             1 |









* Footnotes

# Local Variables:
# eval: (org-babel-do-load-languages (quote org-babel-load-languages) (quote ((sqlite . t))))
# End:
