#+NAME: APISnoop Update 
#+DATE: 2019-08-19
#+AUTHOR: ii team

* Summary
  The APISnoop team are working to expand how much we know, or can know, about field usage and coverage in Kubernetes.  The initial question we are answering is: "What is the state of testing coverage for every field related to PodSpec".  This question required us to first discover which fields actually relate to PodSpec and in what configuration, and how to correlate the data within Audit Log events to the corresponding fields and definitions within the swagger.json
  
  Our work to answer this question is helping to answer the larger questions like, "what is the testing coverage for every field?  Or for any arbitrary kind, what fields relate to it and what are their coverage?"
  
  We are working within a new infrastructure for APISnoop, where we load audit events and swaggers directly into a Postgres database, and then build out our queries from this raw data.  This allows us to query the data from multiple sources, including this report: all tables listed below are coming directly from our server, by running queries dynamically as we type this report.
* PodSpec Field Coverage
  
 Initially we explored podspec coverage by giving a report on each field related to podspec and its relative hits, test hits, and conformance test hits.  We did this by manually walking the podspec tree to get all relevant fields, then building out a custom view.

#+NAME: PodSpec Field Coverage
#+BEGIN_SRC sql-mode
select * from podspec_field_summary;
#+END_SRC

#+RESULTS: PodSpec Field Coverage
#+begin_src sql-mode
  |         podspec_field         | other_hits | e2e_hits | conf_hits|  
  |-------------------------------+------------+----------+----------|
  | ephemeralContainers           |          0 |        0 |         0|
  | overhead                      |          0 |        0 |         0|
  | preemptionPolicy              |          0 |        0 |         0|
  | shareProcessNamespace         |          0 |        0 |         0|
  | topologySpreadConstraints     |          0 |        0 |         0|
  | readinessGates                |          0 |        8 |         0|
  | dnsConfig                     |          0 |       16 |         0|
  | hostIPC                       |          0 |       16 |         0|
  | hostPID                       |          0 |       16 |         0|
  | priorityClassName             |       3731 |       32 |         0|
  | runtimeClassName              |          0 |       36 |         0|
  | affinity                      |       1213 |       43 |         0|
  | hostAliases                   |          0 |        0 |         8|
  | imagePullSecrets              |          0 |        0 |         8|
  | activeDeadlineSeconds         |         18 |        8 |        14|
  | initContainers                |          0 |     1315 |        32|
  | hostNetwork                   |       2687 |     1574 |        41|
  | automountServiceAccountToken  |          0 |       36 |        60|
  | subdomain                     |       5253 |       85 |        60|
  | hostname                      |       5469 |       85 |        60|
  | priority                      |        900 |       83 |       105|
  | tolerations                   |       4820 |       83 |       105|
  | nodeName                      |       8379 |     4170 |       127|
  | nodeSelector                  |       3260 |      257 |       128|
  | serviceAccount                |      12025 |     1199 |       201|
  | serviceAccountName            |      12025 |     1199 |       201|
  | volumes                       |      15598 |     6903 |       876|
  | enableServiceLinks            |      12097 |     6506 |      1741|
  | containers                    |      27717 |    13194 |      2063|
  | dnsPolicy                     |      27717 |    13194 |      2063|
  | restartPolicy                 |      27717 |    13194 |      2063|
  | schedulerName                 |      27717 |    13194 |      2063|
  | securityContext               |      27717 |    13194 |      2063|
  | terminationGracePeriodSeconds |      27717 |    13194 |      2063|
#+end_src

This was a useful summary, but immediately begged new questions: what's the coverage for all the fields within something like containers?  Can we see this not as a summary, but as a granular walk through each field and sub-field and see each of their coverage?

To answer these, we'd need to make a generalized query that walked the path of any kind, noting every field and sub-field and the path to each.
* Recursive Querying of Kubernetes Schemas
  We achieved this using a recursive view that starts from a swagger.json defition of a kind, then walks through each of its fields, finding any that reference their own schema and then branching out to walk down each of these paths.  
  
  This allows us to now see every field within the swagger.json, the kind it relates to, and any sub-kinds that come from it.  
  This clarity into kinds will help in multiple ways.  By connecting this work to our audit logs, we can start to see coverage field by field, based on any spec or kind we wished.  We can then see exactly which areas are untested, their importance as related to our kind definitions, and write out tests with better focus and priority.
  
  To better illustrate this, wec an look at some sample queries.
* Sample Queries
** A listing of fields related to Podspec
    Here we can walk up or down a tree for any arbitrary kind, like podspec. 
*** A sampling of fields within podspec
 In this query we can see a sampling of fields within podspec
 #+NAME: Left PodSpec
 #+BEGIN_SRC sql-mode
 select * from kind_field_path
 where field_kind not like 'io%' -- only look at int and string
 and kind like '%PodSpec'
 and field_path like '%.%'
 limit 20;
 #+END_SRC

 #+RESULTS: Left PodSpec
 #+begin_src sql-mode
             kind            |              field_path               | field_kind | field_type |           sub_kind           
 ----------------------------+---------------------------------------+------------+------------+------------------------------
  io.k8s.api.core.v1.PodSpec | containers.command                    | string     | array      | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | containers.terminationMessagePath     | string     | string     | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | containers.tty                        | integer    | boolean    | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | containers.args                       | string     | array      | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | containers.image                      | string     | string     | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | containers.stdinOnce                  | integer    | boolean    | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | containers.name                       | string     | string     | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | containers.workingDir                 | string     | string     | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | containers.imagePullPolicy            | string     | string     | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | containers.terminationMessagePolicy   | string     | string     | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | containers.stdin                      | integer    | boolean    | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | initContainers.command                | string     | array      | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | initContainers.terminationMessagePath | string     | string     | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | initContainers.tty                    | integer    | boolean    | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | initContainers.args                   | string     | array      | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | initContainers.image                  | string     | string     | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | initContainers.stdinOnce              | integer    | boolean    | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | initContainers.name                   | string     | string     | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | initContainers.workingDir             | string     | string     | io.k8s.api.core.v1.Container
  io.k8s.api.core.v1.PodSpec | initContainers.imagePullPolicy        | string     | string     | io.k8s.api.core.v1.Container
 (20 rows)

 #+end_src

*** A sampling of fields that contain podspec
  Or go in the other direction, and see a sampling of fields that contain podspec.
 #+NAME: Right PodSpec
 #+BEGIN_SRC sql-mode
 select * from kind_field_path
 where field_kind not like 'io%' -- only look at int and string
 and sub_kind like '%PodSpec'
 and field_path like '%.%'
 limit 20;
 #+END_SRC

 #+RESULTS: Right PodSpec
 #+begin_src sql-mode
                 kind                |         field_path         | field_kind | field_type |          sub_kind          
 ------------------------------------+----------------------------+------------+------------+----------------------------
  io.k8s.api.core.v1.PodTemplateSpec | spec.hostPID               | integer    | boolean    | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.hostIPC               | integer    | boolean    | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.hostname              | string     | string     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.nodeName              | string     | string     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.overhead              | integer    | object     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.priority              | integer    | integer    | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.dnsPolicy             | string     | string     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.subdomain             | string     | string     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.hostNetwork           | integer    | boolean    | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.nodeSelector          | integer    | object     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.restartPolicy         | string     | string     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.schedulerName         | string     | string     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.serviceAccount        | string     | string     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.preemptionPolicy      | string     | string     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.runtimeClassName      | string     | string     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.priorityClassName     | string     | string     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.enableServiceLinks    | integer    | boolean    | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.serviceAccountName    | string     | string     | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.activeDeadlineSeconds | integer    | integer    | io.k8s.api.core.v1.PodSpec
  io.k8s.api.core.v1.PodTemplateSpec | spec.shareProcessNamespace | integer    | boolean    | io.k8s.api.core.v1.PodSpec
 (20 rows)

 #+end_src

** A sampling of  subresources for Container
   Our initial summary made us curious to see all the sub-resources for any of the fields of podspec.  Here is a sampling for container.
  #+NAME: Sub-Resources for Container
  #+BEGIN_SRC sql-mode
  select * from kind_field_path
  where field_kind not like 'io%' -- only look at int and string
  and kind like '%v1.Container'
  and field_path like '%.%'
  limit 20;
  #+END_SRC

  #+RESULTS: Sub-Resources for Container
  #+begin_src sql-mode
               kind             |             field_path             | field_kind | field_type |                sub_kind                 
  ------------------------------+------------------------------------+------------+------------+-----------------------------------------
   io.k8s.api.core.v1.Container | ports.name                         | string     | string     | io.k8s.api.core.v1.ContainerPort
   io.k8s.api.core.v1.Container | ports.hostIP                       | string     | string     | io.k8s.api.core.v1.ContainerPort
   io.k8s.api.core.v1.Container | ports.hostPort                     | integer    | integer    | io.k8s.api.core.v1.ContainerPort
   io.k8s.api.core.v1.Container | ports.protocol                     | string     | string     | io.k8s.api.core.v1.ContainerPort
   io.k8s.api.core.v1.Container | ports.containerPort                | integer    | integer    | io.k8s.api.core.v1.ContainerPort
   io.k8s.api.core.v1.Container | envFrom.prefix                     | string     | string     | io.k8s.api.core.v1.EnvFromSource
   io.k8s.api.core.v1.Container | env.value                          | string     | string     | io.k8s.api.core.v1.EnvVar
   io.k8s.api.core.v1.Container | env.name                           | string     | string     | io.k8s.api.core.v1.EnvVar
   io.k8s.api.core.v1.Container | readinessProbe.successThreshold    | integer    | integer    | io.k8s.api.core.v1.Probe
   io.k8s.api.core.v1.Container | readinessProbe.periodSeconds       | integer    | integer    | io.k8s.api.core.v1.Probe
   io.k8s.api.core.v1.Container | readinessProbe.initialDelaySeconds | integer    | integer    | io.k8s.api.core.v1.Probe
   io.k8s.api.core.v1.Container | readinessProbe.timeoutSeconds      | integer    | integer    | io.k8s.api.core.v1.Probe
   io.k8s.api.core.v1.Container | readinessProbe.failureThreshold    | integer    | integer    | io.k8s.api.core.v1.Probe
   io.k8s.api.core.v1.Container | livenessProbe.successThreshold     | integer    | integer    | io.k8s.api.core.v1.Probe
   io.k8s.api.core.v1.Container | livenessProbe.periodSeconds        | integer    | integer    | io.k8s.api.core.v1.Probe
   io.k8s.api.core.v1.Container | livenessProbe.initialDelaySeconds  | integer    | integer    | io.k8s.api.core.v1.Probe
   io.k8s.api.core.v1.Container | livenessProbe.timeoutSeconds       | integer    | integer    | io.k8s.api.core.v1.Probe
   io.k8s.api.core.v1.Container | livenessProbe.failureThreshold     | integer    | integer    | io.k8s.api.core.v1.Probe
   io.k8s.api.core.v1.Container | resources.limits                   | integer    | object     | io.k8s.api.core.v1.ResourceRequirements
   io.k8s.api.core.v1.Container | resources.requests                 | integer    | object     | io.k8s.api.core.v1.ResourceRequirements
  (20 rows)

  #+end_src

** A sampling of  subresources for Volume
   We can do this summary for any field, like Volume.
  #+NAME: Sub-Resources for Volume
  #+BEGIN_SRC sql-mode
  select * from kind_field_path
  where field_kind not like 'io%' -- only look at int and string
  and kind like '%v1.Volume'
  and field_path like '%.%'
  limit 20;
  #+END_SRC

  #+RESULTS: Sub-Resources for Volume
  #+begin_src sql-mode
             kind            |           field_path           | field_kind | field_type |                      sub_kind                       
  ---------------------------+--------------------------------+------------+------------+-----------------------------------------------------
   io.k8s.api.core.v1.Volume | awsElasticBlockStore.readOnly  | integer    | boolean    | io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource
   io.k8s.api.core.v1.Volume | awsElasticBlockStore.fsType    | string     | string     | io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource
   io.k8s.api.core.v1.Volume | awsElasticBlockStore.partition | integer    | integer    | io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource
   io.k8s.api.core.v1.Volume | awsElasticBlockStore.volumeID  | string     | string     | io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource
   io.k8s.api.core.v1.Volume | azureDisk.readOnly             | integer    | boolean    | io.k8s.api.core.v1.AzureDiskVolumeSource
   io.k8s.api.core.v1.Volume | azureDisk.diskName             | string     | string     | io.k8s.api.core.v1.AzureDiskVolumeSource
   io.k8s.api.core.v1.Volume | azureDisk.fsType               | string     | string     | io.k8s.api.core.v1.AzureDiskVolumeSource
   io.k8s.api.core.v1.Volume | azureDisk.kind                 | string     | string     | io.k8s.api.core.v1.AzureDiskVolumeSource
   io.k8s.api.core.v1.Volume | azureDisk.diskURI              | string     | string     | io.k8s.api.core.v1.AzureDiskVolumeSource
   io.k8s.api.core.v1.Volume | azureDisk.cachingMode          | string     | string     | io.k8s.api.core.v1.AzureDiskVolumeSource
   io.k8s.api.core.v1.Volume | azureFile.shareName            | string     | string     | io.k8s.api.core.v1.AzureFileVolumeSource
   io.k8s.api.core.v1.Volume | azureFile.readOnly             | integer    | boolean    | io.k8s.api.core.v1.AzureFileVolumeSource
   io.k8s.api.core.v1.Volume | azureFile.secretName           | string     | string     | io.k8s.api.core.v1.AzureFileVolumeSource
   io.k8s.api.core.v1.Volume | cephfs.secretFile              | string     | string     | io.k8s.api.core.v1.CephFSVolumeSource
   io.k8s.api.core.v1.Volume | cephfs.path                    | string     | string     | io.k8s.api.core.v1.CephFSVolumeSource
   io.k8s.api.core.v1.Volume | cephfs.user                    | string     | string     | io.k8s.api.core.v1.CephFSVolumeSource
   io.k8s.api.core.v1.Volume | cephfs.monitors                | string     | array      | io.k8s.api.core.v1.CephFSVolumeSource
   io.k8s.api.core.v1.Volume | cephfs.readOnly                | integer    | boolean    | io.k8s.api.core.v1.CephFSVolumeSource
   io.k8s.api.core.v1.Volume | cinder.volumeID                | string     | string     | io.k8s.api.core.v1.CinderVolumeSource
   io.k8s.api.core.v1.Volume | cinder.readOnly                | integer    | boolean    | io.k8s.api.core.v1.CinderVolumeSource
  (20 rows)

  #+end_src

* Recommended Actions and Next Steps
  Our next step as a team is to connect this field view to our audit events, so we can then see coverage for each field.
  From there, we can recommend and write tests for kubernetes based not on endpoints, but on fields that represent important behaviors of kubernetes.
