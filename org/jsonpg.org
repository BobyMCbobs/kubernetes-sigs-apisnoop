#+TITLE: json => triggers => views in PostgreSQL
#+TODO: TODO | TADA
* api swaggers
** swagger.json table

#+NAME: raw_swaggers
#+BEGIN_SRC sql-mode 
CREATE TABLE raw_swaggers (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ingested_at timestamp DEFAULT CURRENT_TIMESTAMP,
    -- version text NOT NULL,
    -- definition_id text NOT NULL,
    data jsonb NOT NULL
);
#+END_SRC

** swagger.json loader

https://www.postgresql.org/docs/current/sql-copy.html

NEXT!
- pipe swagger's definitions into sql table
- ensure that when we go to 'hasura.sharing.io' you can see this table.
- construct some views, through sql and graphql.

With ~jq -c~ this is one line of json for the entire file ~5 Megabytes.
Which will be the 'jsonb' type for the data column when we import.

#+BEGIN_SRC tmate
  cat ../swagger.json | jq -c . \
  | psql -c "COPY raw_swaggers (data) FROM STDIN (DELIMITER e'\x02', FORMAT 'csv', QUOTE e'\x01');"
#+END_SRC

* api operations + parameters = responses
** TADA operations view from swagger.json table
   CLOSED: [2019-07-31 Wed 00:54]
- [ ] model it after existing api_operations table
- [ ] ensure additional loading of parameters
- [ ] ensure additional loading of responses
#+NAME: existing api_operations table
#+BEGIN_SRC sql-mode :eval never
CREATE TABLE public.api_operations (
    id text NOT NULL,
    method text NOT NULL,
    path text NOT NULL,
    regexp text NOT NULL,
    "group" text NOT NULL,
    version text NOT NULL,
    kind text NOT NULL,
    "category" text NOT NULL,
    description text NOT NULL
  );
create index api_operations_id on api_operations(id);
create index api_operations_method on api_operations(method);
create index api_operations_regexp on api_operations(regexp);
#+END_SRC

In the swagger.json, we have a =paths= key, with subkeys like =/api= and =/api/v1/=.  Each of these are also objects, containing keys based on the operation method.

And so we would want to create records for each path, and then records for each method within the path.

The way I did this was to first create a view called raw_paths, which just contains the swagger it came from and the entirety of its jsonb.
We can then use that to generate our api_operations

#+NAME: raw_paths view
#+BEGIN_SRC sql-mode :eval never
  CREATE OR REPLACE VIEW "public"."raw_paths" AS 
    SELECT raw_swaggers.id AS raw_swagger_id,
           d.key AS path,
           d.value
      FROM (raw_swaggers
            JOIN LATERAL jsonb_each((raw_swaggers.data -> 'paths'::text)) d(key, value) ON (true))
     ORDER BY d.key;
#+END_SRC

We then use raw_paths in this new api_operations view.  
I assign a UUID for each record entry, so we can create parameters and responses views that link back to the right operation record.

To be able to assign a UUID we need to extend our db to have a uuid generator.  We can do this in hasura, by just throwing in raw sql.

#+NAME: extend db for uuid generation
#+BEGIN_SRC sql-mode :eval never
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
#+END_SRC

Now we can make a new uuid as id with =uuid_generate_v1()=.  This'll let us easily link our params and responses view to the right operation record.

#+NAME: New api_operations view
#+BEGIN_SRC sql-mode :eval never
  CREATE OR REPLACE VIEW "public"."zapi_operations" AS 
    SELECT (d.value ->> 'operationId'::text) AS operationId,
           uuid_generate_v1() as id,
           raw_paths.raw_swagger_id as raw_swagger_id,
           d.key AS method,
           raw_paths.path as path,
           ((d.value -> 'x-kubernetes-group-version-kind'::text) ->> 'group'::text) AS "group",
           ((d.value -> 'x-kubernetes-group-version-kind'::text) ->> 'version'::text) AS version,
           ((d.value -> 'x-kubernetes-group-version-kind'::text) ->> 'kind'::text) AS kind,
           (d.value ->> 'description'::text) AS description,
           (d.value ->> 'x-kubernetes-action'::text) AS x_kubernetes_action,
           (d.value -> 'tags'::text) AS tags,
           (d.value -> 'schemes'::text) AS schemes,
           (d.value -> 'consumes'::text) AS consumes,
           (d.value -> 'responses'::text) AS responses
           (d.value -> 'parameters') AS parameters
      FROM (raw_paths
            JOIN LATERAL jsonb_each(raw_paths.value) d(key, value) ON (true))
     ORDER BY (d.value ->> 'operationId'::text);
#+END_SRC

*** TODO figure out category and regex columns
    These are two columns I couldn't get directlyf rom the swagger.json, and am unsure how they were gathered.  The closest thing to the category was certain tags within the tag column, but not sure if that's correct.

** TODO [#B] parameters view
   
   for any given api_operation, its parameters will be an array of objects, with each object having a =name= and =in= field.  
   If the parameter is /in/ the /body/, then it will also have a schema.$ref that gives a link to its definition.
   Otherwise, it will have a type and description.

   Because of this, we can create a parameters view with

  | api_operations_id     | name | in | type                                     | description                    | unique_items |
  |-----------------------+------+----+------------------------------------------+--------------------------------+--------------|
  | link to its operation | name | in | either its given type or 'schema object' | its description or schema.$ref | null or true |
   
  I could not figure out how to get this straight from the raw_swaggers, since not all api_operations have parameters.
  
  Instead, I created a view of only the operations with parameters...

  #+NAME: api_operations_with_parameters
  #+BEGIN_SRC sql-mode :eval never
    CREATE OR REPLACE VIEW "public"."operations_with_parameters" AS 
      SELECT uuid_generate_v1() AS id,
             api_operations.id AS api_operations_id,
             api_operations.parameters
        FROM api_operations
       WHERE (api_operations.parameters IS NOT NULL)
       ORDER BY (uuid_generate_v1());
  #+END_SRC

then based our parameters view from it:

#+NAME: api_operations_parameters view
#+BEGIN_SRC sql-mode :eval never
  CREATE OR REPLACE VIEW "public"."api_operations_parameters" AS 
    SELECT operations_with_parameters.api_operations_id,
           (param.entry ->> 'name'::text) AS name,
           (param.entry ->> 'in'::text) AS "in",
           CASE
           WHEN ((param.entry ->> 'in'::text) = 'body'::text) THEN 'schema object'::text
           ELSE (param.entry ->> 'type'::text)
          END AS type,
           CASE
           WHEN ((param.entry ->> 'in'::text) = 'body'::text) THEN ((param.entry -> 'schema'::text) ->> '$ref'::text)
           ELSE (param.entry ->> 'description'::text)
          END AS description,
           CASE
           WHEN ((param.entry ->> 'required'::text) IS NULL) THEN 'false'::text
           ELSE (param.entry ->> 'required'::text)
          END AS required,
           (param.entry ->> 'uniqueItems'::text) AS unique_items,
           param.entry AS full_entry
      FROM operations_with_parameters,
           LATERAL jsonb_array_elements(operations_with_parameters.parameters) WITH ORDINALITY param(entry, index);
#+END_SRC

this is now live at =hasura.sharing.io=

** TADA responses view
   CLOSED: [2019-07-31 Wed 00:54]
   Our table should be:
   responseId, response Number, description, schemaRef, schemaType
   it would be something like
   
   
  | id             | api_operations_id | response | descrption   | schema                    |
  |----------------+-------------------+----------+--------------+---------------------------|
  | 23j301j3-3j3j3 | fj3jdjaj2-3j2j3   |      200 | OK           | string                    |
  | 30392-32j23j3  | fjkdjsjdskj-2jdjd |      401 | Unauthorized | NULL                      |
  | 3030-3392039   | fjkjsjdjfj-2jfjdj |      200 | ok           | "#/definitions/something" |


   We can make this with the following sql statement:

   #+NAME: Responses View
   #+BEGIN_SRC sql-mode :eval never
     CREATE OR REPLACE VIEW "public"."responses" AS 
       SELECT uuid_generate_v1() AS id,
              api_operations.id AS api_operations_id,
              d.key AS response,
              (d.value ->> 'description'::text) AS description,
              CASE
              WHEN (((d.value -> 'schema'::text) IS NOT NULL) AND (((d.value -> 'schema'::text) -> 'type'::text) IS NOT NULL))
                THEN ((d.value -> 'schema'::text) ->> 'type'::text)
              WHEN (((d.value -> 'schema'::text) IS NOT NULL) AND (((d.value -> 'schema'::text) -> '$ref'::text) IS NOT NULL))
               THEN ((d.value -> 'schema'::text) ->> '$ref'::text)
              ELSE NULL::text
             END AS schema
         FROM (api_operations
               JOIN LATERAL jsonb_each(api_operations.responses) d(key, value) ON (true))
        ORDER BY (uuid_generate_v1());
   #+END_SRC
   
   This is live on hasura.sharing.io as the =responses= view.
   
** TODO Update Types View to be on swagger.json

   We did two updates, big one changing the name from types to resources.  these objects are v. vague and overlap with others with similar names.  In essence, they are called definitions in the swagger.json, but refer to group/version/kinds and each have their own type within.  A name needs to be decided for this that doesn't clash, and resource seems to work.
   
   The query is straightforward, building from the ones above, with an additional new thing of converting their required jsonb array into a string array (since this is similar to other tickets we'll need to do).  I got how to do this from [[https://www.dbrnd.com/2016/08/postgresql-9-4-how-to-convert-json-array-elements-into-string-array-jsonb_array_elements-string_agg/][this website]]

#+NAME: api_resources view
#+BEGIN_SRC sql-mode :eval never
CREATE OR REPLACE VIEW "public"."api_resources" AS 
 SELECT d.key AS name,
    uuid_generate_v1() AS id,
    raw_swaggers.id AS raw_swagger_id,
    d.value,
    (d.value ->> 'type'::text) AS resource_type,
    (d.value -> 'properties'::text) AS properties,
    (((d.value -> 'x-kubernetes-group-version-kind'::text) -> 0) ->> 'group'::text) AS k8s_group,
    (((d.value -> 'x-kubernetes-group-version-kind'::text) -> 0) ->> 'version'::text) AS k8s_version,
    (((d.value -> 'x-kubernetes-group-version-kind'::text) -> 0) ->> 'kind'::text) AS k8s_kind,
    ( SELECT string_agg(btrim((jsonstring.value)::text, '"'::text), ', '::text) AS string_agg
           FROM jsonb_array_elements((d.value -> 'required'::text)) jsonstring(value)) AS required
   FROM (raw_swaggers
     JOIN LATERAL jsonb_each((raw_swaggers.data -> 'definitions'::text)) d(key, value) ON (true))
  ORDER BY id;
#+END_SRC

   
** TODO materialized views
** TODO optimization indexes on materialized views
** raw operation json
#+BEGIN_SRC  shell
cat ../swagger.json \
  | jq -c '.paths | to_entries | .[].value | to_entries | .[].value | {operationId: .operationId, parameters: .parameters, responses: .responses}'\
  | jq .
 # | head -10 | tail -1
#| {operationId:.operationId}' \
# .[].value | to_entries[][]' \
#  | head -200 | tail -1 | jq .
# | {operationId: .operationId}' \
# {"operationId": value.operationId, "parameter": value.parameters, "responses": value.responses}' #| head -200 | tail -1 | jq .
# |.[].value | to_entries[] | {"operationId": .operationId, "parameter": .parameters, "responses": .responses}'  | head -200 | tail -1 | jq .


#+END_SRC

#+RESULTS:
#+begin_EXAMPLE
{
  "operationId": "getCoreAPIVersions",
  "parameters": null,
  "responses": {
    "200": {
      "description": "OK",
      "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions"
      }
    },
    "401": {
      "description": "Unauthorized"
    }
  }
}
{
  "operationId": "getCoreV1APIResources",
  "parameters": null,
  "responses": {
    "200": {
      "description": "OK",
      "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
      }
    },
    "401": {
      "description": "Unauthorized"
    }
  }
}
{
  "operationId": "listCoreV1ComponentStatus",
  "parameters": null,
  "responses": {
    "200": {
      "description": "OK",
      "schema": {
        "$ref": "#/definitions/io.k8s.api.core.v1.ComponentStatusList"
      }
    },
    "401": {
      "description": "Unauthorized"
    }
  }
}
#+end_EXAMPLE

#+BEGIN_SRC shell
  cat swagger.json | jq '.definitions' | 
  | sort -R | grep -vi alpha\\\|beta | grep core | head -40 
cat data.json | psql -h localhost -p 5432 feeds -c \
  "COPY raw_api_definitions (definition_id,data) FROM STDIN with delimite;"
#  "COPY raw_api_definitions (data) FROM STDIN WITH version='master-123';"
#+END_SRC

* api objects + properties
** TODO types view from swagger.json table
** TODO properties view from swagger.json table (likely not much to change)
** TODO materialized views
** TODO optimization indexes on materialized views
** raw definition json

#+NAME: number of definitions
#+BEGIN_SRC  shell
  cat ../swagger.json | jq -c '.definitions | to_entries | map(.value.definition = .key) | map(.value.version="local") | .[].value'  | wc -l
#+END_SRC

#+RESULTS: number of definitions
#+begin_EXAMPLE
630
#+end_EXAMPLE

** raw api definition table

#+NAME: raw_api_definitions
#+BEGIN_SRC sql-mode 
CREATE TABLE raw_api_definitions (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ingested_at timestamp DEFAULT CURRENT_TIMESTAMP,
    -- version text NOT NULL,
    -- definition_id text NOT NULL,
    data jsonb NOT NULL
);
#+END_SRC

** load raw json into table

#+BEGIN_SRC tmate
  cat ../swagger.json \
  | jq -c '.definitions | to_entries | map(.value.definition = .key) | map(.value.version="local") | .[].value' \
  | psql -c "COPY raw_api_definitions (data) FROM STDIN (DELIMITER e'\x02', FORMAT 'csv', QUOTE e'\x01');"
#+END_SRC

** types view
#+NAME: Types View
#+BEGIN_SRC sql-mode
-- DROP VIEW public.types;
CREATE OR REPLACE VIEW "public"."types" AS 
 SELECT raw_api_definitions.id,
    (raw_api_definitions.data ->> 'definition'::text) AS name,
    (raw_api_definitions.data ->> 'description'::text) AS description,
    (((raw_api_definitions.data -> 'x-kubernetes-group-version-kind'::text) ->0) ->> 'group'::text) AS group,
    (((raw_api_definitions.data -> 'x-kubernetes-group-version-kind'::text) ->0) ->> 'version'::text) AS version,
    (((raw_api_definitions.data -> 'x-kubernetes-group-version-kind'::text) ->0) ->> 'kind'::text) AS kind,
    to_jsonb((raw_api_definitions.data -> 'properties')) AS properties,
    (raw_api_definitions.data ->> 'type'::text) AS type,
    (raw_api_definitions.data ->> 'required'::text) AS required,
    (raw_api_definitions.data ->> 'version'::text) AS source
   FROM raw_api_definitions;
#+END_SRC

** properties view
   We wanted our properties view to have a param_kind field, whose value was dynamic based on the properties' type.
   We can do this with a CASE statement, where the value changes based on some boolean expressions
#+NAME: Properties View
#+BEGIN_SRC sql-mode
  CREATE OR REPLACE VIEW "public"."properties" AS 
    SELECT types.id AS type_id,
           d.key AS property,
           d.value,
           (d.value ->> 'description'::text) AS description,
           (d.value ->> 'format'::text) AS format,
           (d.value ->> 'x-kubernetes-patch-merge-key'::text) AS merge_key,
           (d.value ->> 'x-kubernetes-patch-strategy'::text) AS patch_strategy,
           CASE
             WHEN d.key is null THEN false
             WHEN (types.required ? d.key) THEN true
             ELSE false
               END
             AS required,
           replace(
             CASE
             WHEN ((d.value ->> 'type'::text) = 'string'::text) THEN 'string'::text
             WHEN ((d.value ->> 'type'::text) IS NULL) THEN (d.value ->> '$ref'::text)
             WHEN ((d.value ->> 'type'::text) = 'array'::text)
              AND ((d.value -> 'items'::text) ->> 'type'::text) IS NULL
               THEN ((d.value -> 'items'::text) ->> '$ref'::text)
             WHEN ((d.value ->> 'type'::text) = 'array'::text)
              AND ((d.value -> 'items'::text) ->> '$ref'::text) IS NULL
               THEN ((d.value -> 'items'::text) ->> 'type'::text)
             ELSE 'integer'::text
             END, '#/definitions/','') AS param_kind,
           CASE
           WHEN ((d.value ->> 'type'::text) IS NULL) THEN 'subtype'::text
           ELSE (d.value ->> 'type'::text)
             END AS param_type
           -- with param type also containing array, we don't need array as a boolean
           -- CASE
           -- WHEN ((d.value ->> 'type'::text) = 'array'::text) THEN true
           -- ELSE false
           --  END AS "array"
      FROM (types
            JOIN LATERAL jsonb_each(types.properties) d(key, value) ON (true))
     ORDER BY types.id;
#+END_SRC

* TODO Materialized views

Version 9.3 also introduced materialized views.

When you mark a view as materialized, it will requery the data only when you
issue the REFRESH command.

The upside is that you’re not wasting resources running complex queries
repeatedly; the downside is that you might not have the most up-to-date data
when you use the view.

The most convincing cases for using materialized views are when the underlying
query takes a long time and when having timely data is not critical.

You often encounter these scenarios when building online analytical processing
(OLAP) applications. Unlike nonmaterialized views, you can add indexes to
materialized views to speed up the read.

* TODO Creating index on Regular Expressions

You can find a wonderful example of GIN in Waiting for Faster LIKE/ILIKE.
As of version 9.3, you can index regular expressions that leverage the GIN-based pg_trgm extension.

https://www.postgresql.org/docs/current/pgtrgm.html

#+BEGIN_EXAMPLE
Beginning in PostgreSQL 9.3, these index types also support
index searches for regular-expression matches (~ and ~* operators),
for example

SELECT * FROM test_trgm WHERE t ~ '(foo|bar)';

The index search works by extracting trigrams from the regular expression and
then looking these up in the index.

The more trigrams that can be extracted from the regular expression, the more
effective the index search is.

Unlike B-tree based searches, the search string need not be left-anchored.
#+END_EXAMPLE

** Need to create a view

that includes ev.op_id with join on ev.verb ~ op.method and ev.request_uri ~ op.regex

#+BEGIN_SRC sql-mode
select ev.verb, op.method, op.path, ev.request_uri 
from api_operations op, audit_events ev
where ev.request_uri='/api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0'
and ev.request_uri ~ op.regexp;
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
  verb  | method |                    path                    |                            request_uri                            
--------+--------+--------------------------------------------+-------------------------------------------------------------------
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
(40 rows)

#+end_src


** pg_tgrm index creation

#+BEGIN_SRC sql-mode
CREATE EXTENSION pg_trgm;
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
CREATE EXTENSION
#+end_src

#+BEGIN_SRC sql-mode
create index api_operation_regex ON api_operations USING GIST (regexp gist_trgm_ops);
#+END_SRC

#+BEGIN_SRC sql-mode
create index api_operation_regex_gin ON api_operations USING GIN (regexp gin_trgm_ops);
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
CREATE INDEX
#+end_src

#+BEGIN_SRC sql-mode
reindex table api_operations;
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
REINDEX
#+end_src

* Queries on views

#+BEGIN_SRC sql-mode
select distinct name from properties where name like '%PodSpec';
#+END_SRC

#+BEGIN_SRC sql-mode
select * from properties where merge_key is not null order by required DESC limit 100	;
#+END_SRC

#+BEGIN_SRC sql-mode
select "group"
  , version
  , kind
  , name
  , property
  , required
--, format
, kind_ref
-- , array_kind_ref
-- ,patch_strategy, merge_key
 from properties
where 
(
    kind_ref like 'io.k8s.api.core.v1.Pod%'
--    kind_ref like 'io.k8s.api.core.v1.Pod%Spec%'
--  or kind_ref like 'io.k8s.api.apps.v1.%Spec'
) and
name not like '%beta%'
and name not like '%alpha%'
order by kind ;
-- and merge_key is not null
-- order by merge_key
-- limit 20;
#+END_SRC
** basic parameteters
#+NAME: only integers and strins have formats
#+BEGIN_SRC sql-mode
select distinct t.name, format, param_kind, param_type
from properties p
, types t
where param_kind not like 'io%'
and p.required
and p.type_id = t.id
and t.name not like '%alpha%'
and t.name not like '%beta%'
-- format is not null
order by param_kind, format, param_type, name
limit 40;
#+END_SRC

#+RESULTS: only integers and strins have formats
#+begin_src sql-mode
                               name                                | format | param_kind | param_type 
-------------------------------------------------------------------+--------+------------+------------
 io.k8s.api.apps.v1.DaemonSetStatus                                | int32  | integer    | integer
 io.k8s.api.apps.v1.ReplicaSetStatus                               | int32  | integer    | integer
 io.k8s.api.apps.v1.StatefulSetStatus                              | int32  | integer    | integer
 io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec             | int32  | integer    | integer
 io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus           | int32  | integer    | integer
 io.k8s.api.autoscaling.v1.ScaleStatus                             | int32  | integer    | integer
 io.k8s.api.core.v1.ContainerPort                                  | int32  | integer    | integer
 io.k8s.api.core.v1.ContainerStateTerminated                       | int32  | integer    | integer
 io.k8s.api.core.v1.ContainerStatus                                | int32  | integer    | integer
 io.k8s.api.core.v1.DaemonEndpoint                                 | int32  | integer    | integer
 io.k8s.api.core.v1.EndpointPort                                   | int32  | integer    | integer
 io.k8s.api.core.v1.ISCSIPersistentVolumeSource                    | int32  | integer    | integer
 io.k8s.api.core.v1.ISCSIVolumeSource                              | int32  | integer    | integer
 io.k8s.api.core.v1.PreferredSchedulingTerm                        | int32  | integer    | integer
 io.k8s.api.core.v1.ReplicationControllerStatus                    | int32  | integer    | integer
 io.k8s.api.core.v1.ServicePort                                    | int32  | integer    | integer
 io.k8s.api.core.v1.WeightedPodAffinityTerm                        | int32  | integer    | integer
 io.k8s.api.scheduling.v1.PriorityClass                            | int32  | integer    | integer
 io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec | int32  | integer    | integer
 io.k8s.api.apps.v1.ControllerRevision                             | int64  | integer    | integer
 io.k8s.api.authorization.v1.SubjectAccessReviewStatus             |        | integer    | boolean
 io.k8s.api.authorization.v1.SubjectRulesReviewStatus              |        | integer    | boolean
 io.k8s.api.core.v1.ContainerStatus                                |        | integer    | boolean
 io.k8s.apimachinery.pkg.apis.meta.v1.APIResource                  |        | integer    | boolean
 io.k8s.api.storage.v1.VolumeAttachmentStatus                      |        | integer    | boolean
 io.k8s.apimachinery.pkg.runtime.RawExtension                      | byte   | string     | string
 io.k8s.api.admissionregistration.v1.MutatingWebhook               |        | string     | array
 io.k8s.api.admissionregistration.v1.ValidatingWebhook             |        | string     | array
 io.k8s.api.authentication.v1.TokenRequestSpec                     |        | string     | array
 io.k8s.api.authorization.v1.NonResourceRule                       |        | string     | array
 io.k8s.api.authorization.v1.ResourceRule                          |        | string     | array
 io.k8s.api.core.v1.CephFSPersistentVolumeSource                   |        | string     | array
 io.k8s.api.core.v1.CephFSVolumeSource                             |        | string     | array
 io.k8s.api.core.v1.ContainerImage                                 |        | string     | array
 io.k8s.api.core.v1.RBDPersistentVolumeSource                      |        | string     | array
 io.k8s.api.core.v1.RBDVolumeSource                                |        | string     | array
 io.k8s.api.core.v1.TopologySelectorLabelRequirement               |        | string     | array
 io.k8s.apimachinery.pkg.apis.meta.v1.APIResource                  |        | string     | array
 io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions                  |        | string     | array
 io.k8s.api.rbac.v1.PolicyRule                                     |        | string     | array
(40 rows)

#+end_src
** k8s parameters
#+NAME: no formats
#+BEGIN_SRC sql-mode
select distinct
t.name,
property,
-- p.required,
param_type, param_kind
from properties p
, types t
where param_kind like 'io%'
and p.required
and p.type_id = t.id
and param_kind not like '%alpha%'
and param_kind not like '%beta%'
and t.name not like '%alpha%'
and t.name not like '%beta%'
order by param_type,
  t.name DESC,
  param_kind;
--;-- limit 20;
#+END_SRC

#+RESULTS: no formats
#+begin_src sql-mode
                                  name                                  |          property          | param_type |                             param_kind                              
------------------------------------------------------------------------+----------------------------+------------+---------------------------------------------------------------------
 io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList      | items                      | array      | io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService
 io.k8s.api.storage.v1.VolumeAttachmentList                             | items                      | array      | io.k8s.api.storage.v1.VolumeAttachment
 io.k8s.api.storage.v1.StorageClassList                                 | items                      | array      | io.k8s.api.storage.v1.StorageClass
 io.k8s.api.scheduling.v1.PriorityClassList                             | items                      | array      | io.k8s.api.scheduling.v1.PriorityClass
 io.k8s.api.rbac.v1.RoleList                                            | items                      | array      | io.k8s.api.rbac.v1.Role
 io.k8s.api.rbac.v1.RoleBindingList                                     | items                      | array      | io.k8s.api.rbac.v1.RoleBinding
 io.k8s.api.rbac.v1.ClusterRoleList                                     | items                      | array      | io.k8s.api.rbac.v1.ClusterRole
 io.k8s.api.rbac.v1.ClusterRoleBindingList                              | items                      | array      | io.k8s.api.rbac.v1.ClusterRoleBinding
 io.k8s.api.networking.v1.NetworkPolicyList                             | items                      | array      | io.k8s.api.networking.v1.NetworkPolicy
 io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions                       | serverAddressByClientCIDRs | array      | io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR
 io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList                   | resources                  | array      | io.k8s.apimachinery.pkg.apis.meta.v1.APIResource
 io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList                      | groups                     | array      | io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup
 io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup                          | versions                   | array      | io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery
 io.k8s.api.core.v1.ServiceList                                         | items                      | array      | io.k8s.api.core.v1.Service
 io.k8s.api.core.v1.ServiceAccountList                                  | items                      | array      | io.k8s.api.core.v1.ServiceAccount
 io.k8s.api.core.v1.SecretList                                          | items                      | array      | io.k8s.api.core.v1.Secret
 io.k8s.api.core.v1.ResourceQuotaList                                   | items                      | array      | io.k8s.api.core.v1.ResourceQuota
 io.k8s.api.core.v1.ReplicationControllerList                           | items                      | array      | io.k8s.api.core.v1.ReplicationController
 io.k8s.api.core.v1.ProjectedVolumeSource                               | sources                    | array      | io.k8s.api.core.v1.VolumeProjection
 io.k8s.api.core.v1.PodTemplateList                                     | items                      | array      | io.k8s.api.core.v1.PodTemplate
 io.k8s.api.core.v1.PodSpec                                             | containers                 | array      | io.k8s.api.core.v1.Container
 io.k8s.api.core.v1.PodList                                             | items                      | array      | io.k8s.api.core.v1.Pod
 io.k8s.api.core.v1.PersistentVolumeList                                | items                      | array      | io.k8s.api.core.v1.PersistentVolume
 io.k8s.api.core.v1.PersistentVolumeClaimList                           | items                      | array      | io.k8s.api.core.v1.PersistentVolumeClaim
 io.k8s.api.core.v1.NodeSelector                                        | nodeSelectorTerms          | array      | io.k8s.api.core.v1.NodeSelectorTerm
 io.k8s.api.core.v1.NodeList                                            | items                      | array      | io.k8s.api.core.v1.Node
 io.k8s.api.core.v1.NamespaceList                                       | items                      | array      | io.k8s.api.core.v1.Namespace
 io.k8s.api.core.v1.LimitRangeSpec                                      | limits                     | array      | io.k8s.api.core.v1.LimitRangeItem
 io.k8s.api.core.v1.LimitRangeList                                      | items                      | array      | io.k8s.api.core.v1.LimitRange
 io.k8s.api.core.v1.EventList                                           | items                      | array      | io.k8s.api.core.v1.Event
 io.k8s.api.core.v1.EndpointsList                                       | items                      | array      | io.k8s.api.core.v1.Endpoints
 io.k8s.api.core.v1.ConfigMapList                                       | items                      | array      | io.k8s.api.core.v1.ConfigMap
 io.k8s.api.core.v1.ComponentStatusList                                 | items                      | array      | io.k8s.api.core.v1.ComponentStatus
 io.k8s.api.coordination.v1.LeaseList                                   | items                      | array      | io.k8s.api.coordination.v1.Lease
 io.k8s.api.batch.v1.JobList                                            | items                      | array      | io.k8s.api.batch.v1.Job
 io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList                  | items                      | array      | io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler
 io.k8s.api.authorization.v1.SubjectRulesReviewStatus                   | nonResourceRules           | array      | io.k8s.api.authorization.v1.NonResourceRule
 io.k8s.api.authorization.v1.SubjectRulesReviewStatus                   | resourceRules              | array      | io.k8s.api.authorization.v1.ResourceRule
 io.k8s.api.apps.v1.StatefulSetList                                     | items                      | array      | io.k8s.api.apps.v1.StatefulSet
 io.k8s.api.apps.v1.ReplicaSetList                                      | items                      | array      | io.k8s.api.apps.v1.ReplicaSet
 io.k8s.api.apps.v1.DeploymentList                                      | items                      | array      | io.k8s.api.apps.v1.Deployment
 io.k8s.api.apps.v1.DaemonSetList                                       | items                      | array      | io.k8s.api.apps.v1.DaemonSet
 io.k8s.api.apps.v1.ControllerRevisionList                              | items                      | array      | io.k8s.api.apps.v1.ControllerRevision
 io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList | items                      | array      | io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration
 io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList   | items                      | array      | io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration
 io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec      | service                    | subtype    | io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference
 io.k8s.api.storage.v1.VolumeAttachmentSpec                             | source                     | subtype    | io.k8s.api.storage.v1.VolumeAttachmentSource
 io.k8s.api.storage.v1.VolumeAttachment                                 | spec                       | subtype    | io.k8s.api.storage.v1.VolumeAttachmentSpec
 io.k8s.api.rbac.v1.RoleBinding                                         | roleRef                    | subtype    | io.k8s.api.rbac.v1.RoleRef
 io.k8s.api.rbac.v1.ClusterRoleBinding                                  | roleRef                    | subtype    | io.k8s.api.rbac.v1.RoleRef
 io.k8s.api.networking.v1.NetworkPolicySpec                             | podSelector                | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
 io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent                        | object                     | subtype    | io.k8s.apimachinery.pkg.runtime.RawExtension
 io.k8s.api.core.v1.WeightedPodAffinityTerm                             | podAffinityTerm            | subtype    | io.k8s.api.core.v1.PodAffinityTerm
 io.k8s.api.core.v1.TCPSocketAction                                     | port                       | subtype    | io.k8s.apimachinery.pkg.util.intstr.IntOrString
 io.k8s.api.core.v1.ScaleIOVolumeSource                                 | secretRef                  | subtype    | io.k8s.api.core.v1.LocalObjectReference
 io.k8s.api.core.v1.ScaleIOPersistentVolumeSource                       | secretRef                  | subtype    | io.k8s.api.core.v1.SecretReference
 io.k8s.api.core.v1.PreferredSchedulingTerm                             | preference                 | subtype    | io.k8s.api.core.v1.NodeSelectorTerm
 io.k8s.api.core.v1.HTTPGetAction                                       | port                       | subtype    | io.k8s.apimachinery.pkg.util.intstr.IntOrString
 io.k8s.api.core.v1.Event                                               | involvedObject             | subtype    | io.k8s.api.core.v1.ObjectReference
 io.k8s.api.core.v1.Event                                               | metadata                   | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
 io.k8s.api.core.v1.Binding                                             | target                     | subtype    | io.k8s.api.core.v1.ObjectReference
 io.k8s.api.batch.v1.JobSpec                                            | template                   | subtype    | io.k8s.api.core.v1.PodTemplateSpec
 io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec                  | scaleTargetRef             | subtype    | io.k8s.api.autoscaling.v1.CrossVersionObjectReference
 io.k8s.api.authorization.v1.SubjectAccessReview                        | spec                       | subtype    | io.k8s.api.authorization.v1.SubjectAccessReviewSpec
 io.k8s.api.authorization.v1.SelfSubjectRulesReview                     | spec                       | subtype    | io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec
 io.k8s.api.authorization.v1.SelfSubjectAccessReview                    | spec                       | subtype    | io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec
 io.k8s.api.authorization.v1.LocalSubjectAccessReview                   | spec                       | subtype    | io.k8s.api.authorization.v1.SubjectAccessReviewSpec
 io.k8s.api.authentication.v1.TokenReview                               | spec                       | subtype    | io.k8s.api.authentication.v1.TokenReviewSpec
 io.k8s.api.authentication.v1.TokenRequestStatus                        | expirationTimestamp        | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.Time
 io.k8s.api.authentication.v1.TokenRequest                              | spec                       | subtype    | io.k8s.api.authentication.v1.TokenRequestSpec
 io.k8s.api.apps.v1.StatefulSetSpec                                     | template                   | subtype    | io.k8s.api.core.v1.PodTemplateSpec
 io.k8s.api.apps.v1.StatefulSetSpec                                     | selector                   | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
 io.k8s.api.apps.v1.ReplicaSetSpec                                      | selector                   | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
 io.k8s.api.apps.v1.DeploymentSpec                                      | template                   | subtype    | io.k8s.api.core.v1.PodTemplateSpec
 io.k8s.api.apps.v1.DeploymentSpec                                      | selector                   | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
 io.k8s.api.apps.v1.DaemonSetSpec                                       | template                   | subtype    | io.k8s.api.core.v1.PodTemplateSpec
 io.k8s.api.apps.v1.DaemonSetSpec                                       | selector                   | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
 io.k8s.api.admissionregistration.v1.ValidatingWebhook                  | clientConfig               | subtype    | io.k8s.api.admissionregistration.v1.WebhookClientConfig
 io.k8s.api.admissionregistration.v1.MutatingWebhook                    | clientConfig               | subtype    | io.k8s.api.admissionregistration.v1.WebhookClientConfig
(79 rows)

#+end_src

** merge strategies and patch keys
#+BEGIN_SRC sql-mode
select t.name as kind,
-- t.group,
-- version,
-- kind,
property, patch_strategy, merge_key, param_kind, param_type
from properties p, types t
where patch_strategy is not null
and p.type_id = t.id
and param_kind not like '%alpha%'
and param_kind not like '%beta%'
-- and p.required
order by version, "group", param_kind, patch_strategy, merge_key;
--;-- limit 20;
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
                                kind                                 |     property     |  patch_strategy  |   merge_key   |                               param_kind                               | param_type 
---------------------------------------------------------------------+------------------+------------------+---------------+------------------------------------------------------------------------+------------
 io.k8s.api.core.v1.ComponentStatus                                  | conditions       | merge            | type          | io.k8s.api.core.v1.ComponentCondition                                  | array
 io.k8s.api.core.v1.ServiceAccount                                   | secrets          | merge            | name          | io.k8s.api.core.v1.ObjectReference                                     | array
 io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration    | webhooks         | merge            | name          | io.k8s.api.admissionregistration.v1.MutatingWebhook                    | array
 io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration  | webhooks         | merge            | name          | io.k8s.api.admissionregistration.v1.ValidatingWebhook                  | array
 io.k8s.api.apps.v1.DaemonSetStatus                                  | conditions       | merge            | type          | io.k8s.api.apps.v1.DaemonSetCondition                                  | array
 io.k8s.api.apps.v1.DeploymentStatus                                 | conditions       | merge            | type          | io.k8s.api.apps.v1.DeploymentCondition                                 | array
 io.k8s.api.apps.v1.DeploymentSpec                                   | strategy         | retainKeys       |               | io.k8s.api.apps.v1.DeploymentStrategy                                  | subtype
 io.k8s.api.apps.v1.ReplicaSetStatus                                 | conditions       | merge            | type          | io.k8s.api.apps.v1.ReplicaSetCondition                                 | array
 io.k8s.api.apps.v1.StatefulSetStatus                                | conditions       | merge            | type          | io.k8s.api.apps.v1.StatefulSetCondition                                | array
 io.k8s.api.batch.v1.JobStatus                                       | conditions       | merge            | type          | io.k8s.api.batch.v1.JobCondition                                       | array
 io.k8s.api.core.v1.PodSpec                                          | initContainers   | merge            | name          | io.k8s.api.core.v1.Container                                           | array
 io.k8s.api.core.v1.PodSpec                                          | containers       | merge            | name          | io.k8s.api.core.v1.Container                                           | array
 io.k8s.api.core.v1.Container                                        | ports            | merge            | containerPort | io.k8s.api.core.v1.ContainerPort                                       | array
 io.k8s.api.core.v1.Container                                        | env              | merge            | name          | io.k8s.api.core.v1.EnvVar                                              | array
 io.k8s.api.core.v1.PodSpec                                          | hostAliases      | merge            | ip            | io.k8s.api.core.v1.HostAlias                                           | array
 io.k8s.api.core.v1.PodSpec                                          | imagePullSecrets | merge            | name          | io.k8s.api.core.v1.LocalObjectReference                                | array
 io.k8s.api.core.v1.NodeStatus                                       | addresses        | merge            | type          | io.k8s.api.core.v1.NodeAddress                                         | array
 io.k8s.api.core.v1.NodeStatus                                       | conditions       | merge            | type          | io.k8s.api.core.v1.NodeCondition                                       | array
 io.k8s.api.core.v1.PersistentVolumeClaimStatus                      | conditions       | merge            | type          | io.k8s.api.core.v1.PersistentVolumeClaimCondition                      | array
 io.k8s.api.core.v1.PodStatus                                        | conditions       | merge            | type          | io.k8s.api.core.v1.PodCondition                                        | array
 io.k8s.api.core.v1.PodStatus                                        | podIPs           | merge            | ip            | io.k8s.api.core.v1.PodIP                                               | array
 io.k8s.api.core.v1.ReplicationControllerStatus                      | conditions       | merge            | type          | io.k8s.api.core.v1.ReplicationControllerCondition                      | array
 io.k8s.api.core.v1.ServiceSpec                                      | ports            | merge            | port          | io.k8s.api.core.v1.ServicePort                                         | array
 io.k8s.api.core.v1.PodSpec                                          | volumes          | merge,retainKeys | name          | io.k8s.api.core.v1.Volume                                              | array
 io.k8s.api.core.v1.Container                                        | volumeDevices    | merge            | devicePath    | io.k8s.api.core.v1.VolumeDevice                                        | array
 io.k8s.api.core.v1.Container                                        | volumeMounts     | merge            | mountPath     | io.k8s.api.core.v1.VolumeMount                                         | array
 io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta                     | ownerReferences  | merge            | uid           | io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference                    | array
 io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus | conditions       | merge            | type          | io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition | array
 io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement       | key              | merge            | key           | string                                                                 | string
 io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta                     | finalizers       | merge            |               | string                                                                 | array
 io.k8s.api.core.v1.NodeSpec                                         | podCIDRs         | merge            |               | string                                                                 | array
(31 rows)

#+end_src
   
* Views
  
Well-designed relational databases store data in normalized form.
To access this data across scattered tables, you write queries to join underlying tables.

When you find yourself writing the same query over and over again, create a
view. Simply put, a view is nothing more than a query permanently stored in the
database.

Some purists have argued that one should always query a view, never tables. This
means you must create a view for every table that you intend to query directly.

The added layer of indirection eases management of permissions and facilitates abstraction of table data.

* More JSON functions:
** json_build_array
** json_build_object
** json_object
** json_to_record
** json_to_recordset

