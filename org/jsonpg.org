#+TITLE: json => triggers => views in PostgreSQL
#+TODO: TODO | TADA


* operations
#+BEGIN_SRC  shell
cat ../swagger.json \
  | jq -c '.paths | to_entries | .[].value | to_entries | .[].value | {operationId: .operationId, parameters: .parameters, responses: .responses}'\
  | jq .
 # | head -10 | tail -1
#| {operationId:.operationId}' \
# .[].value | to_entries[][]' \
#  | head -200 | tail -1 | jq .
# | {operationId: .operationId}' \
# {"operationId": value.operationId, "parameter": value.parameters, "responses": value.responses}' #| head -200 | tail -1 | jq .
# |.[].value | to_entries[] | {"operationId": .operationId, "parameter": .parameters, "responses": .responses}'  | head -200 | tail -1 | jq .
#+END_SRC

#+RESULTS:
#+begin_EXAMPLE
{
  "operationId": "getCoreAPIVersions",
  "parameters": null,
  "responses": {
    "200": {
      "description": "OK",
      "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions"
      }
    },
    "401": {
      "description": "Unauthorized"
    }
  }
}
{
  "operationId": "getCoreV1APIResources",
  "parameters": null,
  "responses": {
    "200": {
      "description": "OK",
      "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
      }
    },
    "401": {
      "description": "Unauthorized"
    }
  }
}
{
  "operationId": "listCoreV1ComponentStatus",
  "parameters": null,
  "responses": {
    "200": {
      "description": "OK",
      "schema": {
        "$ref": "#/definitions/io.k8s.api.core.v1.ComponentStatusList"
      }
    },
    "401": {
      "description": "Unauthorized"
    }
  }
}
#+end_EXAMPLE


* raw_json Table
#+NAME: raw_swaggers
#+BEGIN_SRC sql-mode 
CREATE TABLE raw_swaggers (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ingested_at timestamp DEFAULT CURRENT_TIMESTAMP,
    -- version text NOT NULL,
    -- definition_id text NOT NULL,
    data jsonb NOT NULL
);
#+END_SRC

#+RESULTS: raw_swaggers
#+begin_src sql-mode
CREATE TABLE
#+end_src

#+NAME: raw_api_definitions
#+BEGIN_SRC sql-mode 
CREATE TABLE raw_api_definitions (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ingested_at timestamp DEFAULT CURRENT_TIMESTAMP,
    -- version text NOT NULL,
    -- definition_id text NOT NULL,
    data jsonb NOT NULL
);
#+END_SRC

#+RESULTS: raw_api_definitions
#+begin_src sql-mode
CREATE TABLE
#+end_src

* raw_json Loader

https://www.postgresql.org/docs/current/sql-copy.html

#+BEGIN_SRC  shell
  cat ../swagger.json | jq -c '.definitions | to_entries | map(.value.definition = .key) | map(.value.version="local") | .[].value'  | wc -l
#+END_SRC

#+RESULTS:
#+begin_EXAMPLE
630
#+end_EXAMPLE

NEXT!
- pipe swagger's definitions into sql table
- ensure that when we go to 'hasura.sharing.io' you can see this table.
- construct some views, through sql and graphql.

#+BEGIN_SRC tmate
  cat ../swagger.json | jq -c . \
  | psql -c "COPY raw_swaggers (data) FROM STDIN (DELIMITER e'\x02', FORMAT 'csv', QUOTE e'\x01');"
#+END_SRC


#+BEGIN_SRC tmate
  cat ../swagger.json \
  | jq -c '.definitions | to_entries | map(.value.definition = .key) | map(.value.version="local") | .[].value' \
  | psql -c "COPY raw_api_definitions (data) FROM STDIN (DELIMITER e'\x02', FORMAT 'csv', QUOTE e'\x01');"
#+END_SRC

This is one line of json per line, which will be the 'jsonb' type for the data column when we import.

#+BEGIN_SRC shell
  cat swagger.json | jq '.definitions' | 
  | sort -R | grep -vi alpha\\\|beta | grep core | head -40 
cat data.json | psql -h localhost -p 5432 feeds -c \
  "COPY raw_api_definitions (definition_id,data) FROM STDIN with delimite;"
#  "COPY raw_api_definitions (data) FROM STDIN WITH version='master-123';"
#+END_SRC

* TADA Loading json quickly into pgqsl
  CLOSED: [2019-07-28 Sun 23:34]

* TODO Views

Well-designed relational databases store data in normalized form.
To access this data across scattered tables, you write queries to join underlying tables.

When you find yourself writing the same query over and over again, create a
view. Simply put, a view is nothing more than a query permanently stored in the
database.

Some purists have argued that one should always query a view, never tables. This
means you must create a view for every table that you intend to query directly.

The added layer of indirection eases management of permissions and facilitates abstraction of table data.
#+BEGIN_SRC sql-mode
DROP VIEW public.types;
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
DROP VIEW
#+end_src

I wonder if it would be possible to add the types used by properties that are not $ref

#+BEGIN_SRC sql-mode
--  DROP VIEW public.types;
CREATE OR REPLACE VIEW "public"."types" AS 
 SELECT raw_api_definitions.id,
    (raw_api_definitions.data ->> 'definition'::text) AS name,
    (raw_api_definitions.data ->> 'description'::text) AS description,
    (((raw_api_definitions.data -> 'x-kubernetes-group-version-kind'::text) ->0) ->> 'group'::text) AS group,
    (((raw_api_definitions.data -> 'x-kubernetes-group-version-kind'::text) ->0) ->> 'version'::text) AS version,
    (((raw_api_definitions.data -> 'x-kubernetes-group-version-kind'::text) ->0) ->> 'kind'::text) AS kind,
    to_jsonb((raw_api_definitions.data -> 'properties')) AS properties,
    (raw_api_definitions.data ->> 'type'::text) AS type,
    (raw_api_definitions.data ->> 'required'::text) AS required,
    (raw_api_definitions.data ->> 'version'::text) AS source
   FROM raw_api_definitions;
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
#+end_src

for all the types in the types view
list each property in this view

#+BEGIN_SRC sql-mode
\dv+ properties
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
                     List of relations
 Schema |    Name    | Type | Owner |  Size   | Description 
--------+------------+------+-------+---------+-------------
 public | properties | view | hh    | 0 bytes | 
(1 row)

#+end_src

#+BEGIN_SRC sql-mode
select distinct name from properties where name like '%PodSpec';
#+END_SRC

#+BEGIN_SRC sql-mode
select * from properties where merge_key is not null order by required DESC limit 100	;
#+END_SRC

#+BEGIN_SRC sql-mode
select "group"
  , version
  , kind
  , name
  , property
  , required
--, format
, kind_ref
-- , array_kind_ref
-- ,patch_strategy, merge_key
 from properties
where 
(
    kind_ref like 'io.k8s.api.core.v1.Pod%'
--    kind_ref like 'io.k8s.api.core.v1.Pod%Spec%'
--  or kind_ref like 'io.k8s.api.apps.v1.%Spec'
) and
name not like '%beta%'
and name not like '%alpha%'
order by kind ;
-- and merge_key is not null
-- order by merge_key
-- limit 20;
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
 group | version |    kind     |                     name                     |    property     |            required             |               kind_ref                
-------+---------+-------------+----------------------------------------------+-----------------+---------------------------------+---------------------------------------
       | v1      | Pod         | io.k8s.api.core.v1.Pod                       | spec            | {}                              | io.k8s.api.core.v1.PodSpec
       | v1      | Pod         | io.k8s.api.core.v1.Pod                       | status          | {}                              | io.k8s.api.core.v1.PodStatus
       | v1      | PodTemplate | io.k8s.api.core.v1.PodTemplate               | template        | {}                              | io.k8s.api.core.v1.PodTemplateSpec
       |         |             | io.k8s.api.apps.v1.StatefulSetSpec           | template        | {selector,template,serviceName} | io.k8s.api.core.v1.PodTemplateSpec
       |         |             | io.k8s.api.batch.v1.JobSpec                  | template        | {template}                      | io.k8s.api.core.v1.PodTemplateSpec
       |         |             | io.k8s.api.core.v1.Affinity                  | podAffinity     | {}                              | io.k8s.api.core.v1.PodAffinity
       |         |             | io.k8s.api.core.v1.Affinity                  | podAntiAffinity | {}                              | io.k8s.api.core.v1.PodAntiAffinity
       |         |             | io.k8s.api.core.v1.PodSpec                   | dnsConfig       | {containers}                    | io.k8s.api.core.v1.PodDNSConfig
       |         |             | io.k8s.api.core.v1.PodSpec                   | securityContext | {containers}                    | io.k8s.api.core.v1.PodSecurityContext
       |         |             | io.k8s.api.core.v1.PodTemplateSpec           | spec            | {}                              | io.k8s.api.core.v1.PodSpec
       |         |             | io.k8s.api.core.v1.ReplicationControllerSpec | template        | {}                              | io.k8s.api.core.v1.PodTemplateSpec
       |         |             | io.k8s.api.apps.v1.DaemonSetSpec             | template        | {selector,template}             | io.k8s.api.core.v1.PodTemplateSpec
       |         |             | io.k8s.api.core.v1.WeightedPodAffinityTerm   | podAffinityTerm | {weight,podAffinityTerm}        | io.k8s.api.core.v1.PodAffinityTerm
       |         |             | io.k8s.api.apps.v1.DeploymentSpec            | template        | {selector,template}             | io.k8s.api.core.v1.PodTemplateSpec
       |         |             | io.k8s.api.apps.v1.ReplicaSetSpec            | template        | {selector}                      | io.k8s.api.core.v1.PodTemplateSpec
(15 rows)

#+end_src


#+BEGIN_SRC sql-mode
--  DROP VIEW public.types;
CREATE OR REPLACE VIEW "public"."types" AS 
 SELECT raw_api_definitions.id,
    (raw_api_definitions.data ->> 'definition'::text) AS name,
    (raw_api_definitions.data ->> 'description'::text) AS description,
    (((raw_api_definitions.data -> 'x-kubernetes-group-version-kind'::text) ->0) ->> 'group'::text) AS group,
    (((raw_api_definitions.data -> 'x-kubernetes-group-version-kind'::text) ->0) ->> 'version'::text) AS version,
    (((raw_api_definitions.data -> 'x-kubernetes-group-version-kind'::text) ->0) ->> 'kind'::text) AS kind,
    (raw_api_definitions.data ->> 'type'::text) AS type,
    (raw_api_definitions.data ->> 'required'::text) AS required,
    (raw_api_definitions.data ->> 'version'::text) AS source
   FROM raw_api_definitions;
#+END_SRC


The types view contains a 'properties' column, that is a json Object with dynamic keys (each key being a property name).

If we wanted a view of just these records, then we can use the postgres function json_each, which'll create a record for each key value pair ina  json.

** TADA Properties View with param_kind
   CLOSED: [2019-07-29 Mon 23:40]
   
   We wanted our properties view to have a param_kind field, whose value was dynamic based on the properties' type.
  
   We can do this with a CASE statement, where the value changes based on some boolean expressions
#+BEGIN_SRC sql-mode
     DROP VIEW "public"."properties";
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
DROP VIEW properties;
#+end_src

#+RESULTS:
#+begin_src sql-mode
DROP VIEW
#+end_src
  
   #+NAME: Properties View with param_kind
   #+BEGIN_SRC sql-mode
     CREATE OR REPLACE VIEW "public"."properties" AS 
       SELECT types.id AS type_id,
              d.key AS property,
              d.value,
              (d.value ->> 'description'::text) AS description,
              (d.value ->> 'format'::text) AS format,
              (d.value ->> 'x-kubernetes-patch-merge-key'::text) AS merge_key,
              (d.value ->> 'x-kubernetes-patch-strategy'::text) AS patch_strategy,
              CASE
                WHEN d.key is null THEN false
                WHEN (types.required ? d.key) THEN true
                ELSE false
                  END
                AS required,
              replace(
                CASE
                WHEN ((d.value ->> 'type'::text) = 'string'::text) THEN 'string'::text
                WHEN ((d.value ->> 'type'::text) IS NULL) THEN (d.value ->> '$ref'::text)
                WHEN ((d.value ->> 'type'::text) = 'array'::text)
                 AND ((d.value -> 'items'::text) ->> 'type'::text) IS NULL
                  THEN ((d.value -> 'items'::text) ->> '$ref'::text)
                WHEN ((d.value ->> 'type'::text) = 'array'::text)
                 AND ((d.value -> 'items'::text) ->> '$ref'::text) IS NULL
                  THEN ((d.value -> 'items'::text) ->> 'type'::text)
                ELSE 'integer'::text
                END, '#/definitions/','') AS param_kind,
              CASE
              WHEN ((d.value ->> 'type'::text) IS NULL) THEN 'subtype'::text
              ELSE (d.value ->> 'type'::text)
                END AS param_type
              -- with param type also containing array, we don't need array as a boolean
              -- CASE
              -- WHEN ((d.value ->> 'type'::text) = 'array'::text) THEN true
              -- ELSE false
              --  END AS "array"
         FROM (types
               JOIN LATERAL jsonb_each(types.properties) d(key, value) ON (true))
        ORDER BY types.id;
   #+END_SRC

   #+RESULTS: Properties View with param_kind
   #+begin_src sql-mode
   CREATE VIEW
   #+end_src

#+NAME: only integers and strins have formats
#+BEGIN_SRC sql-mode
select distinct format, param_kind, param_type from properties
where param_kind not like 'io%'
-- format is not null
order by param_kind, format;
--;-- limit 20;
#+END_SRC

#+RESULTS: only integers and strins have formats
#+begin_src sql-mode
 format | param_kind | param_type 
--------+------------+------------
 double | integer    | number
 int32  | integer    | integer
 int64  | integer    | integer
        | integer    | boolean
        | integer    | object
        | integer    | array
 byte   | string     | string
        | string     | array
        | string     | string
(9 rows)

#+end_src

#+NAME: no formats
#+BEGIN_SRC sql-mode
select distinct
t.name,
property,
-- p.required,
param_type, param_kind
from properties p
, types t
where param_kind like 'io%'
and p.required
and p.type_id = t.id
and param_kind not like '%alpha%'
and param_kind not like '%beta%'
and t.name not like '%alpha%'
and t.name not like '%beta%'
order by param_type,
  t.name DESC,
  param_kind;
--;-- limit 20;
#+END_SRC

#+RESULTS: no formats
#+begin_src sql-mode
                                  name                                  |          property          | param_type |                             param_kind                              
------------------------------------------------------------------------+----------------------------+------------+---------------------------------------------------------------------
 io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList      | items                      | array      | io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService
 io.k8s.api.storage.v1.VolumeAttachmentList                             | items                      | array      | io.k8s.api.storage.v1.VolumeAttachment
 io.k8s.api.storage.v1.StorageClassList                                 | items                      | array      | io.k8s.api.storage.v1.StorageClass
 io.k8s.api.scheduling.v1.PriorityClassList                             | items                      | array      | io.k8s.api.scheduling.v1.PriorityClass
 io.k8s.api.rbac.v1.RoleList                                            | items                      | array      | io.k8s.api.rbac.v1.Role
 io.k8s.api.rbac.v1.RoleBindingList                                     | items                      | array      | io.k8s.api.rbac.v1.RoleBinding
 io.k8s.api.rbac.v1.ClusterRoleList                                     | items                      | array      | io.k8s.api.rbac.v1.ClusterRole
 io.k8s.api.rbac.v1.ClusterRoleBindingList                              | items                      | array      | io.k8s.api.rbac.v1.ClusterRoleBinding
 io.k8s.api.networking.v1.NetworkPolicyList                             | items                      | array      | io.k8s.api.networking.v1.NetworkPolicy
 io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions                       | serverAddressByClientCIDRs | array      | io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR
 io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList                   | resources                  | array      | io.k8s.apimachinery.pkg.apis.meta.v1.APIResource
 io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList                      | groups                     | array      | io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup
 io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup                          | versions                   | array      | io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery
 io.k8s.api.core.v1.ServiceList                                         | items                      | array      | io.k8s.api.core.v1.Service
 io.k8s.api.core.v1.ServiceAccountList                                  | items                      | array      | io.k8s.api.core.v1.ServiceAccount
 io.k8s.api.core.v1.SecretList                                          | items                      | array      | io.k8s.api.core.v1.Secret
 io.k8s.api.core.v1.ResourceQuotaList                                   | items                      | array      | io.k8s.api.core.v1.ResourceQuota
 io.k8s.api.core.v1.ReplicationControllerList                           | items                      | array      | io.k8s.api.core.v1.ReplicationController
 io.k8s.api.core.v1.ProjectedVolumeSource                               | sources                    | array      | io.k8s.api.core.v1.VolumeProjection
 io.k8s.api.core.v1.PodTemplateList                                     | items                      | array      | io.k8s.api.core.v1.PodTemplate
 io.k8s.api.core.v1.PodSpec                                             | containers                 | array      | io.k8s.api.core.v1.Container
 io.k8s.api.core.v1.PodList                                             | items                      | array      | io.k8s.api.core.v1.Pod
 io.k8s.api.core.v1.PersistentVolumeList                                | items                      | array      | io.k8s.api.core.v1.PersistentVolume
 io.k8s.api.core.v1.PersistentVolumeClaimList                           | items                      | array      | io.k8s.api.core.v1.PersistentVolumeClaim
 io.k8s.api.core.v1.NodeSelector                                        | nodeSelectorTerms          | array      | io.k8s.api.core.v1.NodeSelectorTerm
 io.k8s.api.core.v1.NodeList                                            | items                      | array      | io.k8s.api.core.v1.Node
 io.k8s.api.core.v1.NamespaceList                                       | items                      | array      | io.k8s.api.core.v1.Namespace
 io.k8s.api.core.v1.LimitRangeSpec                                      | limits                     | array      | io.k8s.api.core.v1.LimitRangeItem
 io.k8s.api.core.v1.LimitRangeList                                      | items                      | array      | io.k8s.api.core.v1.LimitRange
 io.k8s.api.core.v1.EventList                                           | items                      | array      | io.k8s.api.core.v1.Event
 io.k8s.api.core.v1.EndpointsList                                       | items                      | array      | io.k8s.api.core.v1.Endpoints
 io.k8s.api.core.v1.ConfigMapList                                       | items                      | array      | io.k8s.api.core.v1.ConfigMap
 io.k8s.api.core.v1.ComponentStatusList                                 | items                      | array      | io.k8s.api.core.v1.ComponentStatus
 io.k8s.api.coordination.v1.LeaseList                                   | items                      | array      | io.k8s.api.coordination.v1.Lease
 io.k8s.api.batch.v1.JobList                                            | items                      | array      | io.k8s.api.batch.v1.Job
 io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList                  | items                      | array      | io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler
 io.k8s.api.authorization.v1.SubjectRulesReviewStatus                   | nonResourceRules           | array      | io.k8s.api.authorization.v1.NonResourceRule
 io.k8s.api.authorization.v1.SubjectRulesReviewStatus                   | resourceRules              | array      | io.k8s.api.authorization.v1.ResourceRule
 io.k8s.api.apps.v1.StatefulSetList                                     | items                      | array      | io.k8s.api.apps.v1.StatefulSet
 io.k8s.api.apps.v1.ReplicaSetList                                      | items                      | array      | io.k8s.api.apps.v1.ReplicaSet
 io.k8s.api.apps.v1.DeploymentList                                      | items                      | array      | io.k8s.api.apps.v1.Deployment
 io.k8s.api.apps.v1.DaemonSetList                                       | items                      | array      | io.k8s.api.apps.v1.DaemonSet
 io.k8s.api.apps.v1.ControllerRevisionList                              | items                      | array      | io.k8s.api.apps.v1.ControllerRevision
 io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList | items                      | array      | io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration
 io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList   | items                      | array      | io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration
 io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec      | service                    | subtype    | io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference
 io.k8s.api.storage.v1.VolumeAttachmentSpec                             | source                     | subtype    | io.k8s.api.storage.v1.VolumeAttachmentSource
 io.k8s.api.storage.v1.VolumeAttachment                                 | spec                       | subtype    | io.k8s.api.storage.v1.VolumeAttachmentSpec
 io.k8s.api.rbac.v1.RoleBinding                                         | roleRef                    | subtype    | io.k8s.api.rbac.v1.RoleRef
 io.k8s.api.rbac.v1.ClusterRoleBinding                                  | roleRef                    | subtype    | io.k8s.api.rbac.v1.RoleRef
 io.k8s.api.networking.v1.NetworkPolicySpec                             | podSelector                | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
 io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent                        | object                     | subtype    | io.k8s.apimachinery.pkg.runtime.RawExtension
 io.k8s.api.core.v1.WeightedPodAffinityTerm                             | podAffinityTerm            | subtype    | io.k8s.api.core.v1.PodAffinityTerm
 io.k8s.api.core.v1.TCPSocketAction                                     | port                       | subtype    | io.k8s.apimachinery.pkg.util.intstr.IntOrString
 io.k8s.api.core.v1.ScaleIOVolumeSource                                 | secretRef                  | subtype    | io.k8s.api.core.v1.LocalObjectReference
 io.k8s.api.core.v1.ScaleIOPersistentVolumeSource                       | secretRef                  | subtype    | io.k8s.api.core.v1.SecretReference
 io.k8s.api.core.v1.PreferredSchedulingTerm                             | preference                 | subtype    | io.k8s.api.core.v1.NodeSelectorTerm
 io.k8s.api.core.v1.HTTPGetAction                                       | port                       | subtype    | io.k8s.apimachinery.pkg.util.intstr.IntOrString
 io.k8s.api.core.v1.Event                                               | involvedObject             | subtype    | io.k8s.api.core.v1.ObjectReference
 io.k8s.api.core.v1.Event                                               | metadata                   | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
 io.k8s.api.core.v1.Binding                                             | target                     | subtype    | io.k8s.api.core.v1.ObjectReference
 io.k8s.api.batch.v1.JobSpec                                            | template                   | subtype    | io.k8s.api.core.v1.PodTemplateSpec
 io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec                  | scaleTargetRef             | subtype    | io.k8s.api.autoscaling.v1.CrossVersionObjectReference
 io.k8s.api.authorization.v1.SubjectAccessReview                        | spec                       | subtype    | io.k8s.api.authorization.v1.SubjectAccessReviewSpec
 io.k8s.api.authorization.v1.SelfSubjectRulesReview                     | spec                       | subtype    | io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec
 io.k8s.api.authorization.v1.SelfSubjectAccessReview                    | spec                       | subtype    | io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec
 io.k8s.api.authorization.v1.LocalSubjectAccessReview                   | spec                       | subtype    | io.k8s.api.authorization.v1.SubjectAccessReviewSpec
 io.k8s.api.authentication.v1.TokenReview                               | spec                       | subtype    | io.k8s.api.authentication.v1.TokenReviewSpec
 io.k8s.api.authentication.v1.TokenRequestStatus                        | expirationTimestamp        | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.Time
 io.k8s.api.authentication.v1.TokenRequest                              | spec                       | subtype    | io.k8s.api.authentication.v1.TokenRequestSpec
 io.k8s.api.apps.v1.StatefulSetSpec                                     | template                   | subtype    | io.k8s.api.core.v1.PodTemplateSpec
 io.k8s.api.apps.v1.StatefulSetSpec                                     | selector                   | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
 io.k8s.api.apps.v1.ReplicaSetSpec                                      | selector                   | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
 io.k8s.api.apps.v1.DeploymentSpec                                      | template                   | subtype    | io.k8s.api.core.v1.PodTemplateSpec
 io.k8s.api.apps.v1.DeploymentSpec                                      | selector                   | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
 io.k8s.api.apps.v1.DaemonSetSpec                                       | template                   | subtype    | io.k8s.api.core.v1.PodTemplateSpec
 io.k8s.api.apps.v1.DaemonSetSpec                                       | selector                   | subtype    | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
 io.k8s.api.admissionregistration.v1.ValidatingWebhook                  | clientConfig               | subtype    | io.k8s.api.admissionregistration.v1.WebhookClientConfig
 io.k8s.api.admissionregistration.v1.MutatingWebhook                    | clientConfig               | subtype    | io.k8s.api.admissionregistration.v1.WebhookClientConfig
(79 rows)

#+end_src


#+BEGIN_SRC sql-mode
select t.name as kind,
-- t.group,
-- version,
-- kind,
property, patch_strategy, merge_key, param_kind, param_type
from properties p, types t
where patch_strategy is not null
and p.type_id = t.id
and param_kind not like '%alpha%'
and param_kind not like '%beta%'
order by version, "group", param_kind, patch_strategy, merge_key;
--;-- limit 20;
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
                                kind                                 |     property     |  patch_strategy  |   merge_key   |                               param_kind                               | param_type 
---------------------------------------------------------------------+------------------+------------------+---------------+------------------------------------------------------------------------+------------
 io.k8s.api.core.v1.ComponentStatus                                  | conditions       | merge            | type          | io.k8s.api.core.v1.ComponentCondition                                  | array
 io.k8s.api.core.v1.ServiceAccount                                   | secrets          | merge            | name          | io.k8s.api.core.v1.ObjectReference                                     | array
 io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration    | webhooks         | merge            | name          | io.k8s.api.admissionregistration.v1.MutatingWebhook                    | array
 io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration  | webhooks         | merge            | name          | io.k8s.api.admissionregistration.v1.ValidatingWebhook                  | array
 io.k8s.api.apps.v1.DaemonSetStatus                                  | conditions       | merge            | type          | io.k8s.api.apps.v1.DaemonSetCondition                                  | array
 io.k8s.api.apps.v1.DeploymentStatus                                 | conditions       | merge            | type          | io.k8s.api.apps.v1.DeploymentCondition                                 | array
 io.k8s.api.apps.v1.DeploymentSpec                                   | strategy         | retainKeys       |               | io.k8s.api.apps.v1.DeploymentStrategy                                  | subtype
 io.k8s.api.apps.v1.ReplicaSetStatus                                 | conditions       | merge            | type          | io.k8s.api.apps.v1.ReplicaSetCondition                                 | array
 io.k8s.api.apps.v1.StatefulSetStatus                                | conditions       | merge            | type          | io.k8s.api.apps.v1.StatefulSetCondition                                | array
 io.k8s.api.batch.v1.JobStatus                                       | conditions       | merge            | type          | io.k8s.api.batch.v1.JobCondition                                       | array
 io.k8s.api.core.v1.PodSpec                                          | initContainers   | merge            | name          | io.k8s.api.core.v1.Container                                           | array
 io.k8s.api.core.v1.PodSpec                                          | containers       | merge            | name          | io.k8s.api.core.v1.Container                                           | array
 io.k8s.api.core.v1.Container                                        | ports            | merge            | containerPort | io.k8s.api.core.v1.ContainerPort                                       | array
 io.k8s.api.core.v1.Container                                        | env              | merge            | name          | io.k8s.api.core.v1.EnvVar                                              | array
 io.k8s.api.core.v1.PodSpec                                          | hostAliases      | merge            | ip            | io.k8s.api.core.v1.HostAlias                                           | array
 io.k8s.api.core.v1.PodSpec                                          | imagePullSecrets | merge            | name          | io.k8s.api.core.v1.LocalObjectReference                                | array
 io.k8s.api.core.v1.NodeStatus                                       | addresses        | merge            | type          | io.k8s.api.core.v1.NodeAddress                                         | array
 io.k8s.api.core.v1.NodeStatus                                       | conditions       | merge            | type          | io.k8s.api.core.v1.NodeCondition                                       | array
 io.k8s.api.core.v1.PersistentVolumeClaimStatus                      | conditions       | merge            | type          | io.k8s.api.core.v1.PersistentVolumeClaimCondition                      | array
 io.k8s.api.core.v1.PodStatus                                        | conditions       | merge            | type          | io.k8s.api.core.v1.PodCondition                                        | array
 io.k8s.api.core.v1.PodStatus                                        | podIPs           | merge            | ip            | io.k8s.api.core.v1.PodIP                                               | array
 io.k8s.api.core.v1.ReplicationControllerStatus                      | conditions       | merge            | type          | io.k8s.api.core.v1.ReplicationControllerCondition                      | array
 io.k8s.api.core.v1.ServiceSpec                                      | ports            | merge            | port          | io.k8s.api.core.v1.ServicePort                                         | array
 io.k8s.api.core.v1.PodSpec                                          | volumes          | merge,retainKeys | name          | io.k8s.api.core.v1.Volume                                              | array
 io.k8s.api.core.v1.Container                                        | volumeDevices    | merge            | devicePath    | io.k8s.api.core.v1.VolumeDevice                                        | array
 io.k8s.api.core.v1.Container                                        | volumeMounts     | merge            | mountPath     | io.k8s.api.core.v1.VolumeMount                                         | array
 io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta                     | ownerReferences  | merge            | uid           | io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference                    | array
 io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus | conditions       | merge            | type          | io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition | array
 io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement       | key              | merge            | key           | string                                                                 | string
 io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta                     | finalizers       | merge            |               | string                                                                 | array
 io.k8s.api.core.v1.NodeSpec                                         | podCIDRs         | merge            |               | string                                                                 | array
(31 rows)

#+end_src
   
* TODO Materialized views

Version 9.3 also introduced materialized views.

When you mark a view as materialized, it will requery the data only when you
issue the REFRESH command.

The upside is that you’re not wasting resources running complex queries
repeatedly; the downside is that you might not have the most up-to-date data
when you use the view.

The most convincing cases for using materialized views are when the underlying
query takes a long time and when having timely data is not critical.

You often encounter these scenarios when building online analytical processing
(OLAP) applications. Unlike nonmaterialized views, you can add indexes to
materialized views to speed up the read.

* TODO Creating index on Regular Expressions

You can find a wonderful example of GIN in Waiting for Faster LIKE/ILIKE.
As of version 9.3, you can index regular expressions that leverage the GIN-based pg_trgm extension.

https://www.postgresql.org/docs/current/pgtrgm.html

#+BEGIN_EXAMPLE
Beginning in PostgreSQL 9.3, these index types also support
index searches for regular-expression matches (~ and ~* operators),
for example

SELECT * FROM test_trgm WHERE t ~ '(foo|bar)';

The index search works by extracting trigrams from the regular expression and
then looking these up in the index.

The more trigrams that can be extracted from the regular expression, the more
effective the index search is.

Unlike B-tree based searches, the search string need not be left-anchored.
#+END_EXAMPLE

** Need to create a view

that includes ev.op_id with join on ev.verb ~ op.method and ev.request_uri ~ op.regex

#+BEGIN_SRC sql-mode
select ev.verb, op.method, op.path, ev.request_uri 
from api_operations op, audit_events ev
where ev.request_uri='/api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0'
and ev.request_uri ~ op.regexp;
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
  verb  | method |                    path                    |                            request_uri                            
--------+--------+--------------------------------------------+-------------------------------------------------------------------
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | get    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | put    | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | delete | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 get    | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
 delete | patch  | /api/v1/namespaces/{namespace}/pods/{name} | /api/v1/namespaces/provisioning-4337/pods/csi-hostpath-attacher-0
(40 rows)

#+end_src


** pg_tgrm index creation

#+BEGIN_SRC sql-mode
CREATE EXTENSION pg_trgm;
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
CREATE EXTENSION
#+end_src

#+BEGIN_SRC sql-mode
create index api_operation_regex ON api_operations USING GIST (regexp gist_trgm_ops);
#+END_SRC

#+BEGIN_SRC sql-mode
create index api_operation_regex_gin ON api_operations USING GIN (regexp gin_trgm_ops);
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
CREATE INDEX
#+end_src

#+BEGIN_SRC sql-mode
reindex table api_operations;
#+END_SRC

#+RESULTS:
#+begin_src sql-mode
REINDEX
#+end_src



* More JSON functions:
** json_build_array
** json_build_object
** json_object
** json_to_record
** json_to_recordset

